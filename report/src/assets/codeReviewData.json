{"functionLineMoreThanLimit":[{"functionName":"- (void)viewDidLoad {","class":"@implementation IPFTransfDashboardViewController","initialLine":156,"content":"{\n    \n    [super viewDidLoad];\n    [IPFEnvironmentUtil trackingView:kDashboardHomeGoogleAnalytics];\n    [IPFConversionTracking setConversionTrackingLabel:kDashboardHomeGoogleAnalytics];\n    self.nextPaymentsTableView.alwaysBounceVertical = NO;\n    self.tableRows = 1;\n    self.tooltip = [IMCTooltip new];\n    [self addScrollViewTapGesture];\n    self.expanded = NO;\n    [self registerNibs];\n    [self setPersonnaliteColor];\n    [self setupHeaderAccountView];\n    [self setStyleToCards];\n    [self setCurrentDayToTitleLabel];\n    [self setAccessibilityOnCards];\n    [self featureToggleSetup];\n\n    [self addNotificationButton];\n    \n    rateAlert = [RateAlertManager new];\n}","plusLine":19},{"functionName":"- (void)viewDidLayoutSubviews","class":"@implementation IPFTransfDashboardViewController","initialLine":180,"content":"{\n    [super viewDidLayoutSubviews];\n    [self.transferDashboardView layoutIfNeeded];\n    [self.transferDashboardView updateConstraintsIfNeeded];\n}","plusLine":2},{"functionName":"- (void)viewWillAppear:(BOOL)animated {","class":"@implementation IPFTransfDashboardViewController","initialLine":186,"content":"{\n    \n    [super viewWillAppear:animated];\n    [self.navigationController setNavigationBarHidden:YES animated:animated];\n    IPFTabBarController* tabBarController = (IPFTabBarController*)self.tabBarController;\n    [tabBarController showTabBarWithAnimation:YES];\n    if (UIAccessibilityIsVoiceOverRunning()) {\n        self.isAccessibilityOn = YES;\n    } else {\n        self.isAccessibilityOn = NO;\n    }\n    if(self.isAccessibilityOn) {\n        self.expanded = YES;\n    }\n    if ([IPFFeatureToggle isPaymentNextPaymentsEnabled]) {\n        if (self.expanded) {\n            self.nextPaymentsTableView.alpha = 0;\n            self.nextPaymentsParentView.alpha = 0;\n            self.transferViewHeightConstraint.constant += self.loadingView.frame.size.height + self.tableViewBottomConstraint.constant;\n            [self.activityIndicator startAnimating];\n            [self loadNextPaymentsWithCompletion:^ {\n                [UIView animateWithDuration:kAnimationDuration animations:^{\n                    self.nextPaymentsParentView.alpha = 1;\n                    self.nextPaymentsTableView.alpha = 1;\n                } completion:^(BOOL finished) {\n                    [self.activityIndicator stopAnimating];\n                    [self calculateTableRows];\n                    [self setNewHeightForTransferDashboard];\n                    [self adjustLayoutWithAnimation];\n                }];\n            }];\n        } else {\n            [self.activityIndicator stopAnimating];\n        }\n    }\n    [self setNewHeightForTransferDashboard];\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(becameActive) name:kApplicationDidBecomeActiveNotification object:nil];\n    [IPFPushHelper refreshNotificationCount];\n    \n    [IPFAnalyticsManager ADBTrackerTrackViewName:kAdobeAnalyticsNavigationTransactions\n                             withContextPageName:kAdobeAnalyticsNavigationTransactions\n                           withContextAppSection:kSectionHomeLoggedAdobeAnalytics\n                          withContextAnalyticsId:[IPFEnvironmentUtil adobeAnalyticsID]\n                           withContextIsLoggedIn: kLoginStateLoggedAdobeAnalytics\n                                    completeWith:nil];\n}","plusLine":43},{"functionName":"- (IPFPaymentTimelineManager *)paymentTimelineManager {","class":"@implementation IPFTransfDashboardViewController","initialLine":233,"content":"{\n    if (!_paymentTimelineManager) {\n        _paymentTimelineManager = [IPFPaymentTimelineManager new];\n    }\n    return _paymentTimelineManager;\n}","plusLine":3},{"functionName":"- (void)registerNibs {","class":"@implementation IPFTransfDashboardViewController","initialLine":240,"content":"{\n    \n    [self.nextPaymentsTableView registerNib:[UINib nibWithNibName:NSStringFromClass([IPFNextPaymentCell class])\n                                                           bundle:nil]\n                     forCellReuseIdentifier:[IPFNextPaymentCell cellIdentifier]];\n    [self.nextPaymentsTableView registerNib:[UINib nibWithNibName:NSStringFromClass([IPFNextPaymentHeaderTableViewCell class]) bundle:nil] forCellReuseIdentifier:kNextPaymentHeaderCellId];\n    [self.nextPaymentsTableView registerNib:[UINib nibWithNibName:NSStringFromClass([IPFNextPaymentErrorTableViewCell class]) bundle:nil] forCellReuseIdentifier:kNextPaymentErrorCellId];\n}","plusLine":5},{"functionName":"- (void)featureToggleSetup ","class":"@implementation IPFTransfDashboardViewController","initialLine":250,"content":"{\n    CGFloat leftColumnHeight = kLeftColumnHeight;\n    CGFloat rightColumnHeight = kRightColumnHeight;\n    \n    [self setupCellphoneRechargeVisibility:&rightColumnHeight];\n    [self setupDDAEnabledVisibility:&rightColumnHeight];\n    \n    [self setupAuthorizedDebitVisibility:&leftColumnHeight];\n    [self setupNextPaymentVisibility];\n    \n    if (leftColumnHeight >= rightColumnHeight) {\n        self.contentViewHeightConstraint.constant = leftColumnHeight;\n    } else {\n        self.contentViewHeightConstraint.constant = rightColumnHeight;\n    }\n}","plusLine":13},{"functionName":"- (void)setupHeaderAccountView {","class":"@implementation IPFTransfDashboardViewController","initialLine":267,"content":"{\n    \n    IPFHeaderAccountView *headerView = [self.view viewWithTag:kHeaderAccountTag];\n    UITapGestureRecognizer *callMenu = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(showUserProfile)];\n    callMenu.numberOfTapsRequired = 1;\n    [headerView setUserInteractionEnabled:YES];\n    [headerView addGestureRecognizer:callMenu];\n    UIButton *headerSearchButton = [self.view viewWithTag:kSearchButtonTag];\n    UITapGestureRecognizer *callSearchView = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(showSearchView)];\n    callSearchView.numberOfTapsRequired = 1;\n    [headerSearchButton setUserInteractionEnabled:YES];\n    [headerSearchButton addGestureRecognizer:callSearchView];\n}","plusLine":10},{"functionName":"- (void)addNotificationButton {","class":"@implementation IPFTransfDashboardViewController","initialLine":281,"content":"{\n    if ([IPFPushHelper shouldEnableItauNotificationKit]) {\n        UIButton *notificationButton = [IPFPushHelper injectNotificationButton:[self.view viewWithTag:kHeaderSecondaryButtonTag]];\n        UITapGestureRecognizer *notificationButtonGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(showNotificationCenter)];\n        notificationButtonGesture.numberOfTapsRequired = 1;\n        [notificationButton setUserInteractionEnabled:YES];\n        [notificationButton addGestureRecognizer:notificationButtonGesture];\n    }\n}","plusLine":6},{"functionName":"- (void)showNotificationCenter {","class":"@implementation IPFTransfDashboardViewController","initialLine":291,"content":"{\n    [self.navigationController setNavigationBarHidden:NO animated:NO];\n    [ItauNotificationKit openNotificationCentral:self.navigationController];\n}","plusLine":1},{"functionName":"- (void)showSearchView {","class":"@implementation IPFTransfDashboardViewController","initialLine":296,"content":"{\n    IMSearchViewController * searchViewController = [IPFStoryboardUtil searchViewController];\n    searchViewController.modalPresentationStyle = UIModalPresentationCustom;\n    [self.navigationController setNavigationBarHidden:NO animated:NO];\n    [self.navigationController pushViewController:searchViewController animated:YES];\n}","plusLine":3},{"functionName":"- (void)viewWillDisappear:(BOOL)animated {","class":"@implementation IPFTransfDashboardViewController","initialLine":303,"content":"{\n    \n    [super viewWillDisappear:animated];\n    [[IPFSessionManager sharedManager] updateUserPreference:NextPaymentsVisibilityPreference to:NO];\n    if (self.expanded) {\n        [self.nextPaymentHeader triggerExpandCollapseTable];\n    }\n    [self.tooltip dismissTooltipAnimated:NO];\n    [[NSNotificationCenter defaultCenter] removeObserver:self name:kApplicationDidBecomeActiveNotification object:nil];\n}","plusLine":7},{"functionName":"- (void)viewDidAppear:(BOOL)animated {","class":"@implementation IPFTransfDashboardViewController","initialLine":314,"content":"{\n    [super viewDidAppear:animated];\n    [self fillBarCodeWithPasteBoard];\n    [rateAlert showRateTransactionIfSuitable];\n}","plusLine":2},{"functionName":"- (void)setCurrentDayToTitleLabel {","class":"@implementation IPFTransfDashboardViewController","initialLine":320,"content":"{\n    \n    NSDateFormatter *dateFormat = [NSDateFormatter new];\n    [dateFormat setDateFormat:NSLocalizedString(kTypeOfDate, nil)];\n    NSInteger day = [[dateFormat stringFromDate:[NSDate date]] intValue];\n    self.titleFirstRow.text = [NSString stringWithFormat:NSLocalizedString(kLocalizedTitleFirstrowLabel, nil), (long)day];\n}","plusLine":4},{"functionName":"- (void)setPersonnaliteColor {","class":"@implementation IPFTransfDashboardViewController","initialLine":328,"content":"{\n    \n    if ([IPFEnvironmentUtil isPersonnalite] || [IPFSessionManager sharedManager].sessionUser.isPersonnalite) {\n        [self.titleFirstRow setTextColor:[UIColor personnaliteColor]];\n        [self.payAccountIcon setTextColor:[UIColor personnaliteColor]];\n        [self.realizeTransferIcon setTextColor:[UIColor personnaliteColor]];\n        [self.depositCheckIcon setTextColor:[UIColor personnaliteColor]];\n        [self.topUpPhoneIcon setTextColor:[UIColor personnaliteColor]];\n        [self.DDAIcon setTextColor:[UIColor personnaliteColor]];\n        [self.authorizeDebitIcon setTextColor:[UIColor personnaliteColor]];\n    }\n}","plusLine":9},{"functionName":"- (void)setStyleToCards {","class":"@implementation IPFTransfDashboardViewController","initialLine":340,"content":"{\n    \n    [self setStyleBorderInView:self.payAccountView];\n    [self setStyleBorderInView:self.realizeTransferView];\n    [self setStyleBorderInView:self.topUpPhoneView];\n    [self setStyleBorderInView:self.authorizeDebitView];\n    [self setStyleBorderInView:self.DDAView];\n    [self setStyleBorderInView:self.nextPaymentsParentView];\n}","plusLine":6},{"functionName":"- (void)setStyleBorderInView:(UIView *)view {","class":"@implementation IPFTransfDashboardViewController","initialLine":350,"content":"{\n    \n    view.layer.cornerRadius = kCardCornerRadius;\n    view.layer.shadowColor = [UIColor cardShadowColor].CGColor;\n    view.layer.masksToBounds = NO;\n    view.layer.shadowOffset = CGSizeMake(kCardShadowOffsetX, kCardShadowOffsetY);\n    view.layer.shadowRadius = kCardShadowRadius;\n    view.layer.shadowOpacity = kCardShadowOpacity;\n    \n}","plusLine":7},{"functionName":"- (void)setAccessibilityOnCards {","class":"@implementation IPFTransfDashboardViewController","initialLine":361,"content":"{\n    \n    [self.payAccountView setIsAccessibilityElement:YES];\n    [self.realizeTransferView setIsAccessibilityElement:YES];\n    [self.topUpPhoneView setIsAccessibilityElement:YES];\n    [self.DDAView setIsAccessibilityElement:YES];\n    [self.authorizeDebitView setIsAccessibilityElement:YES];\n    [self.payAccountView setAccessibilityLabel:NSLocalizedString(kLocalizedPayAccountViewAccessibilityLabel, nil)];\n    [self.realizeTransferView setAccessibilityLabel:NSLocalizedString(kLocalizedRealizeTransferViewAccessibilityLabel, nil)];\n    [self.topUpPhoneView setAccessibilityLabel:NSLocalizedString(kLocalizedTopUpPhoneViewAccessibilityLabel, nil)];\n    [self.DDAView setAccessibilityLabel:NSLocalizedString(kLocalizedDDAViewAccessibilityLabel, nil)];\n    [self.authorizeDebitView setAccessibilityLabel:NSLocalizedString(kLocalizedAuthorizeDebitViewAccessibilityLabel, nil)];\n    \n    \n}","plusLine":12},{"functionName":"- (void)openCalendarTimeline {","class":"@implementation IPFTransfDashboardViewController","initialLine":377,"content":"{\n    if (![IPFFeatureToggle isTransactionCalendarEnabled]) {\n        return;\n    }\n    [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard action:kGAActionProximosPagamentos label:nil value:nil];\n    IPFPaymentCalendarTimelineViewController *calendarTimelineVC = [IPFStoryboardUtil paymentCalendarTimelineViewController];\n    [self.navigationController pushViewController:calendarTimelineVC animated:YES];\n}","plusLine":5},{"functionName":"- (void)loadNextPaymentsWithCompletion:(PaymentCompletionCallback)completion {","class":"@implementation IPFTransfDashboardViewController","initialLine":387,"content":"{\n    NSDate *startDate = [NSDate date];\n    NSDate *endDate = [startDate addDays:kNextPaymentsPeriod];\n    __block typeof (self) weakSelf = self;\n    [weakSelf.paymentTimelineManager fetchNextPaymentsUnpaidWithUser:[[IPFSessionManager sharedManager] sessionUser]\n                                                           startDate:startDate\n                                                             endDate:endDate\n                                                          completion:^(NSArray<IPFNextPayment *> *arrayPayments, NSError *error) {\n                                                              if (arrayPayments && arrayPayments.count > 0) {\n                                                                  IPFNextPayment *firstItem = arrayPayments.firstObject;\n                                                                  weakSelf.nextPaymentArray = [weakSelf filterNextPaymentArray:arrayPayments byDate:firstItem.date];\n                                                              }\n                                                              [weakSelf calculateTableRows];\n                                                              [weakSelf loadNextPaymentsView];\n                                                              if (completion) {\n                                                                  completion();\n                                                              }\n                                                          }];\n}","plusLine":16},{"functionName":"- (void)calculateTableRows {","class":"@implementation IPFTransfDashboardViewController","initialLine":407,"content":"{\n    \n    if (self.expanded == YES) {\n        if (self.nextPaymentArray.count == 0) {\n            self.tableRows = 2;\n        } else {\n            self.tableRows = 1 + self.nextPaymentArray.count;\n        }\n    } else {\n        self.tableRows = 1;\n    }\n}","plusLine":9},{"functionName":"- (void)loadNextPaymentsView {","class":"@implementation IPFTransfDashboardViewController","initialLine":420,"content":"{\n    \n    if (self.nextPaymentArray.count > 0) {\n        self.transferDashboardView.nextPaymentHeaderView.emptyStatus = NO;\n        IPFNextPayment *nextPayment = self.nextPaymentArray.firstObject;\n        self.transferDashboardView.nextPaymentHeaderView.detailLabel.text = nextPayment.formattedCustomDate;\n    }\n    else {\n        self.transferDashboardView.nextPaymentHeaderView.emptyStatus = YES;\n    }\n    self.transferDashboardView.nextPaymentHeaderView.numberOfNextpayments = self.nextPaymentArray.count;\n    [self.transferDashboardView.nextPaymentHeaderView setupAccessibility];\n    [self setNewHeightForTransferDashboard];\n    [self adjustLayoutWithAnimation];\n}","plusLine":12},{"functionName":"- (void)setNewHeightForTransferDashboard {","class":"@implementation IPFTransfDashboardViewController","initialLine":436,"content":"{\n    \n    CGFloat headerHeight;\n    CGFloat tableRowsHeight;\n    CGFloat totalHeight;\n    CGRect dashboardFrame = self.transferDashboardView.frame;\n    if (self.view.layer.frame.size.width-kCardMarginsSize > kTableViewNormalWidth) {\n        headerHeight = kHeaderLargeHeight;\n    } else {\n        headerHeight = kHeaderNormalHeight;\n    }\n    if ([IPFFeatureToggle isPaymentNextPaymentsEnabled]) {\n        self.nextPaymentsParentView.hidden = NO;\n        if (self.nextPaymentArray.count == 0) {\n            tableRowsHeight = kErrorCellHeight;\n        } else {\n            tableRowsHeight = self.nextPaymentArray.count * kHeightForRow;\n        }\n        self.nextPaymentsParentViewHeightConstraint.constant = headerHeight;\n        if ([IPFFeatureToggle isTransactionCalendarEnabled]) {\n            self.nextPaymentsParentViewHeightConstraint.constant += kNextPaymentsFooterViewHeight;\n        }\n        if (self.expanded) {\n            self.nextPaymentsParentViewHeightConstraint.constant += tableRowsHeight;\n        }\n        totalHeight = kTransferViewHeightWithoutTable + self.nextPaymentsParentViewHeightConstraint.constant;\n    }\n    else {\n        self.nextPaymentsParentView.hidden = YES;\n        totalHeight = kTransferViewHeightWithoutTable;\n    }\n    self.transferViewHeightConstraint.constant = totalHeight + 16;\n    [self.transferDashboardView setFrame:dashboardFrame];\n}","plusLine":31},{"functionName":"- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex {","class":"@implementation IPFTransfDashboardViewController","initialLine":473,"content":"{\n    if (alertView == self.requestCameraAlertView && buttonIndex == 1) { // Digitar código\n        [self openInputCodebarWithValue:@\"\"];\n    }\n}","plusLine":2},{"functionName":"- (void)barcodeInput:(IPFBarcodeInputViewController *)inputBarcodeVC readyToUseBarcodeWithResponse:(IPFPaymentBarCode *)responseObj {","class":"@implementation IPFTransfDashboardViewController","initialLine":481,"content":"{\n    \n    [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard action:kGAActionBotaoPagarBoleto label:nil value:nil];\n    \n    IPFPaymentSecondStepViewController *secondStepVC = [IPFStoryboardUtil paymentSecondStepController];\n    secondStepVC.modelContainer.response.headers = responseObj.headers;\n    secondStepVC.modelContainer.response = responseObj;\n    [self.navigationController pushViewController:secondStepVC animated:NO];\n}","plusLine":6},{"functionName":"- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{","class":"@implementation IPFTransfDashboardViewController","initialLine":497,"content":"{\n    \n    id cell;\n    if (self.expanded && indexPath.row > 0) {\n        if (self.nextPaymentArray.count == 0) {\n            cell = [tableView dequeueReusableCellWithIdentifier:kNextPaymentErrorCellId];\n        } else {\n            IPFNextPayment *nextPayment = self.nextPaymentArray[indexPath.row - 1];\n            cell = [tableView dequeueReusableCellWithIdentifier:[IPFNextPaymentCell cellIdentifier]];\n            NSString *preffixAccessibility = [NSString stringWithFormat:NSLocalizedString(kLocalizedAccessibilityDashboardPaymentNextpaymentCellPreffixplaceholder, nil), indexPath.row + 1, self.nextPaymentArray.count];\n            [cell setupCellWithPayment:nextPayment accessibilityString:preffixAccessibility];\n        }\n    } else {\n        cell = [tableView dequeueReusableCellWithIdentifier:kNextPaymentHeaderCellId];\n        self.nextPaymentHeader = (IPFNextPaymentHeaderTableViewCell *)cell;\n        self.nextPaymentHeader.delegateListener = self;\n        self.nextPaymentHeader.flipButton.hidden = self.isAccessibilityOn;\n    }\n    \n    return cell;\n}","plusLine":18},{"functionName":"- (nullable UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section {","class":"@implementation IPFTransfDashboardViewController","initialLine":519,"content":"{\n    if ([IPFFeatureToggle isTransactionCalendarEnabled]) {\n        IPFPaymentNextPaymentsFooterView *tableFooterView = [IPFPaymentNextPaymentsFooterView new];\n        tableFooterView.delegate = self;\n        return tableFooterView;\n    }\n    return nil;\n}","plusLine":5},{"functionName":"- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {","class":"@implementation IPFTransfDashboardViewController","initialLine":530,"content":"{\n    \n    CGFloat rowHeight;\n    if (indexPath.row == 0) {\n        rowHeight = tableView.layer.frame.size.width-kCardMarginsSize > kTableViewNormalWidth ? kHeaderLargeHeight : kHeaderNormalHeight;\n    } else {\n        if (self.nextPaymentArray.count == 0) {\n            rowHeight = kErrorCellHeight;\n        } else {\n            rowHeight = kHeightForRow;\n        }\n    }\n    return rowHeight;\n}","plusLine":11},{"functionName":"- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {","class":"@implementation IPFTransfDashboardViewController","initialLine":545,"content":"{\n    if ([IPFFeatureToggle isTransactionCalendarEnabled]) {\n        return kNextPaymentsFooterViewHeight;\n    }\n    return kNextPaymentsFooterViewHeightWhenNotShow;\n}","plusLine":3},{"functionName":"- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {","class":"@implementation IPFTransfDashboardViewController","initialLine":552,"content":"{\n    if (indexPath.row == 0 && [IPFFeatureToggle isTransactionCalendarEnabled]) {\n        [self openCalendarTimeline];\n    }\n}","plusLine":2},{"functionName":"- (void)expandCollapseTable:(IPFFlipButton *)flipButton withIndicator:(UIActivityIndicatorView *)activityIndicator {","class":"@implementation IPFTransfDashboardViewController","initialLine":565,"content":"{\n    \n    if (self.expanded == YES) {\n        [[IPFSessionManager sharedManager] updateUserPreference:NextPaymentsVisibilityPreference to:NO];\n        self.expanded = NO;\n        self.tableRows = 1;\n        [self calculateTableRows];\n        [flipButton setExpanded:self.expanded];\n        [self setNewHeightForTransferDashboard];\n        [self adjustLayoutWithAnimation];\n        \n    } else {\n        [[IPFSessionManager sharedManager] updateUserPreference:NextPaymentsVisibilityPreference to:YES];\n        self.expanded = YES;\n        [UIView animateWithDuration:kAnimationDuration animations:^{\n            flipButton.alpha = 0;\n            activityIndicator.alpha = 1;\n        } completion:^(BOOL finished) {\n            [activityIndicator startAnimating];\n            [self loadNextPaymentsWithCompletion:^ {\n                [UIView animateWithDuration:kAnimationDuration animations:^{\n                    flipButton.alpha = 1;\n                    [flipButton setExpanded:self.expanded];\n                    activityIndicator.alpha = 0;\n                } completion:^(BOOL finished) {\n                    [activityIndicator stopAnimating];\n                    [self calculateTableRows];\n                    [self setNewHeightForTransferDashboard];\n                    [self adjustLayoutWithAnimation];\n                }];\n            }];\n        }];\n    }\n}","plusLine":31},{"functionName":"- (void)adjustLayoutWithAnimation {","class":"@implementation IPFTransfDashboardViewController","initialLine":600,"content":"{\n    \n    [UIView animateWithDuration:kAnimationDuration animations:^{\n        [self.transferDashboardView setNeedsLayout];\n        [self.transferDashboardView layoutIfNeeded];\n        [self.transferDashboardView.nextPaymentsTableView reloadData];\n    } completion:^(BOOL finished) {}];\n}","plusLine":5},{"functionName":"- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldReceiveTouch:(UITouch *)touch {","class":"@implementation IPFTransfDashboardViewController","initialLine":610,"content":"{\n    if (touch.view == self.tooltip.tooltipView) {\n        return NO;\n    }\n    return YES;\n}","plusLine":3},{"functionName":"- (IBAction)didClickTopUpPhoneView:(id)sender {","class":"@implementation IPFTransfDashboardViewController (Actions)","initialLine":629,"content":"{\n    \n    IPFPhoneRechargeViewController *phoneRechargeViewController = [IPFStoryboardUtil phoneRechargeViewController];\n    [self.navigationController pushViewController:phoneRechargeViewController animated:YES];\n}","plusLine":2},{"functionName":"- (IBAction)didClickPayAccountView:(id)sender {","class":"@implementation IPFTransfDashboardViewController (Actions)","initialLine":635,"content":"{\n    \n    if ([IPFSessionManager sharedManager].currentAccountIsUnderContingency) {\n        __weak __block typeof(IPFContingencyErrorViewController *)paymentWarningVC = (IPFContingencyErrorViewController *)[IPFStoryboardUtil contingencyPaymentWarningViewController];\n        __weak __block typeof(self) weakSelf = self;\n        paymentWarningVC.proceedToNextScreenBlock = ^void(void) {\n            [paymentWarningVC dismissViewControllerAnimated:YES completion:^{\n                [weakSelf handlePaymentClickAction];\n            }];\n        };\n        [self presentViewController:paymentWarningVC animated:YES completion:nil];\n    }\n    else {\n        [self handlePaymentClickAction];\n    }\n}","plusLine":13},{"functionName":"- (void)handlePaymentClickAction {","class":"@implementation IPFTransfDashboardViewController (Actions)","initialLine":652,"content":"{\n    \n    if (UIAccessibilityIsVoiceOverRunning()) {\n        [self openInputCodebarWithValue:@\"\"];\n    } else {\n        __weak __block typeof(self) weakSelf = self;\n        [IPFEnvironmentUtil requestCameraAccessWithCompletion:^(NSString *messageFailed, BOOL granted) {\n            if (granted) {\n                \n                [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard action:kGAActionAbrirCamera label:nil value:nil];\n                [weakSelf presentViewController:[IPFStoryboardUtil barcodeReaderNavigationControllerWithDelegate:weakSelf] animated:YES completion:nil];\n            }\n            else {\n                if ([UIAlertController class]) {\n                    UIAlertController *alert = [UIAlertController alertControllerWithTitle:nil message:messageFailed preferredStyle:UIAlertControllerStyleAlert];\n                    \n                    UIAlertAction *inputCodebarAction = [UIAlertAction actionWithTitle:NSLocalizedString(kLocalizedDefaultLabelDigitecodigo, nil) style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {\n                        \n                        [weakSelf openInputCodebarWithValue:@\"\"];\n                    }];\n                    UIAlertAction *okAction = [UIAlertAction actionWithTitle:NSLocalizedString(kLocalizedButtonOk, nil) style:UIAlertActionStyleDefault handler:nil];\n                    \n                    [alert addAction:inputCodebarAction];\n                    [alert addAction:okAction];\n                    \n                    [weakSelf presentViewController:alert animated:YES completion:nil];\n                }\n                else {\n                    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:messageFailed\n                                                                    message:nil\n                                                                   delegate:weakSelf\n                                                          cancelButtonTitle:NSLocalizedString(kLocalizedButtonOk, nil) otherButtonTitles:NSLocalizedString(kLocalizedDefaultLabelDigitecodigo, nil), nil];\n                    [alert show];\n                    weakSelf.requestCameraAlertView = alert;\n                }\n            }\n        }];\n    }\n}","plusLine":36},{"functionName":"- (IBAction)didClickDoTransferView:(id)sender {","class":"@implementation IPFTransfDashboardViewController (Actions)","initialLine":692,"content":"{\n    IPFTransferAmountViewController *transferViewController = [IPFStoryboardUtil transferController];\n    [self.navigationController pushViewController:transferViewController animated:YES];\n}","plusLine":1},{"functionName":"- (IBAction)didClickDepositPayCheckView:(id)sender {","class":"@implementation IPFTransfDashboardViewController (Actions)","initialLine":705,"content":"{\n    \n    //    [self proceedToValidateTermDeposit];\n}","plusLine":1},{"functionName":"- (IBAction)didClickAuthorizeDebitView:(id)sender {","class":"@implementation IPFTransfDashboardViewController (Actions)","initialLine":714,"content":"{\n    \n    [self didTapToAccessNewControllerWithView:sender type:DAI];\n}","plusLine":1},{"functionName":"-(void)showUserProfile{","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":727,"content":"{\n    \n    dispatch_async(dispatch_get_main_queue(), ^{\n        IPFUserProfileViewController *selectUserProfileViewController = [IPFUserProfileViewController new];\n        IPFPopupNavigationController* popupNavigationController = [[IPFPopupNavigationController alloc] initWithRootViewController:selectUserProfileViewController];\n        [self presentViewController:popupNavigationController animated:YES completion:nil];\n    });\n}","plusLine":5},{"functionName":"- (void)addScrollViewTapGesture {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":736,"content":"{\n    \n    UITapGestureRecognizer *singleTapToCloseTooltip = [[UITapGestureRecognizer alloc]\n                                                       initWithTarget:self\n                                                       action:@selector(singleTapGestureCaptured:)];\n    singleTapToCloseTooltip.cancelsTouchesInView = NO;\n    singleTapToCloseTooltip.delegate = self;\n    [self.transferDashboardView addGestureRecognizer:singleTapToCloseTooltip];\n}","plusLine":6},{"functionName":"- (void)becameActive {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":746,"content":"{\n    \n    [self.tooltip dismissTooltipAnimated:NO];\n    [self fillBarCodeWithPasteBoard];\n}","plusLine":2},{"functionName":"- (void)fillBarCodeWithPasteBoard {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":752,"content":"{\n    \n    NSString *text = [[NSUserDefaults standardUserDefaults] objectForKey:kLastUsedTextAtTooltipKey];\n    NSString *barcode = [self pasteBoardText];\n    if (![text isEqualToString:barcode] && [barcode im_boletoIsValid] == BoletoCompleteAndValid) {\n        \n        IMCTooltipConfig *config = [IMCTooltipConfig new];\n        config.text = barcode;\n        config.title = NSLocalizedString(kLocalizedPaymentTolltipPasteboardQuestion, nil);\n        config.backgroundColor = [UIColor azulAtalho];\n        config.animated = YES;\n        config.position = IMCTooltipViewPositionBottomLeft;\n        config.marginInset = UIEdgeInsetsMake(2.f, 0.f, 0.f, CGRectGetMinX(self.payAccountView.frame));\n        [self.tooltip showWithSuperview:self.transferView anchorView:self.payAccountView configuration:config];\n        self.tooltip.messageLabel.accessibilityLabel = NSLocalizedString(kLocalizedAccessibilityDashboardPaymentTooltipText, nil);\n        self.tooltip.messageLabel.accessibilityIdentifier = kPasteBarcodeTooltip;\n        self.tooltip.messageLabel.accessibilityTraits = UIAccessibilityTraitButton;\n        [self.tooltip.tooltipView addTarget:self action:@selector(tapTooltip:) forControlEvents:UIControlEventTouchUpInside];\n    }\n}","plusLine":17},{"functionName":"- (void)tapTooltip:(UIControl *)sender {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":773,"content":"{\n    [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard action:kGAActionDigitarCodigoBarras label:nil value:nil];\n    [self.tooltip dismissTooltipAnimated:NO];\n    [self openInputCodebarWithValue:[self pasteBoardText]];\n    NSUserDefaults *userDefault = [NSUserDefaults standardUserDefaults];\n    [userDefault setObject:[self pasteBoardText]?:@\"\" forKey:kLastUsedTextAtTooltipKey];\n    [userDefault synchronize];\n}","plusLine":5},{"functionName":"- (NSArray *)filterNextPaymentArray:(NSArray<IPFNextPayment *> *)array byDate:(NSDate *)date {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":782,"content":"{\n    \n    NSPredicate *predicateFilter = [NSPredicate predicateWithBlock:^BOOL(IPFNextPayment *payment, NSDictionary *bindings) {\n        return ([payment.date isTheSameDayWithDate:date]);\n    }];\n    return [array filteredArrayUsingPredicate:predicateFilter];\n}","plusLine":4},{"functionName":"- (NSArray *)filterRemindersArray:(NSArray *)array{","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":790,"content":"{\n    \n    NSPredicate *predicateFilter = [NSPredicate predicateWithBlock:^BOOL(IPFReminder *item, NSDictionary *bindings) {\n        return ([item isKindOfClass:[IPFReminder class]] && item.reminderDescription.length > 0 && item.expireDate);\n    }];\n    return [array filteredArrayUsingPredicate:predicateFilter];\n}","plusLine":4},{"functionName":"- (void)showNextPaymentsView {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":798,"content":"{\n    \n    [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard action:kGAActionVerTodos label:nil value:nil];\n    IPFCheckingAccountViewController *accountVC = [IPFStoryboardUtil checkingsAccountController];\n    [accountVC setInitialSegmentedSelected:3];\n    [self.navigationController pushViewController:accountVC animated:YES];\n}","plusLine":4},{"functionName":"- (void)didTapToAccessNewControllerWithView:(UIView *)view type:(TransferType)type {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":806,"content":"{\n    \n    IPFMenuItemNew *item = [[IPFMenuItemNew alloc] init];\n    if (type == DDA) {\n        item.chaveMobile = kDDAOpKey;\n        item.nome = NSLocalizedString(kLocalizedPaymentTitleDda, nil);\n        [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard action:kGALabelDda label:nil value:nil];\n    } else if (type == DAI) {\n        item.chaveMobile = kDAIOpKey;\n        item.nome = NSLocalizedString(kLocalizedPaymentTitleDai, nil);\n        [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard action:kGALabelDai label:nil value:nil];\n    }\n    if (item.chaveMobile && item.chaveMobile.length > 0) {\n        [[NSNotificationCenter defaultCenter] postNotificationName:kShowMenuItemNotification object:nil userInfo:@{ kMenuItemNotificationKey : item }];\n    }\n}","plusLine":13},{"functionName":"- (void)proceedToPlayCardBill {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":823,"content":"{\n    \n    IPFMenuItemNew *item = [IPFMenuItemNew new];\n    item.chaveMobile = kCardBillOpKey;\n    item.nome = NSLocalizedString(kLocalizedPaymentTitleBillCard, nil);\n    [[NSNotificationCenter defaultCenter] postNotificationName:kShowMenuItemNotification object:nil userInfo:@{kMenuItemNotificationKey:item}];\n}","plusLine":4},{"functionName":"- (NSString *)pasteBoardText {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":831,"content":"{\n    UIPasteboard *pasteboard = [UIPasteboard generalPasteboard];\n    return [pasteboard.string im_unformatted];\n}","plusLine":1},{"functionName":"- (void)setupCellphoneRechargeVisibility:(CGFloat *)rightColumnHeight {","class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","initialLine":840,"content":"{\n    if ([IPFFeatureToggle isPaymentCellphoneRechargeEnabled]) {\n        [self.topUpPhoneView setHidden:NO];\n        self.cellphoneRechargeTopSpaceConstraint.constant = kDefaultTopSpace;\n        self.cellphoneRechargeHeightConstraint.constant = kCellphoneDdaHeightSpace;\n        *rightColumnHeight += kRightColumnHeightCellphoneDda;\n    } else {\n        [self.topUpPhoneView setHidden:YES];\n        self.cellphoneRechargeTopSpaceConstraint.constant = kZeroTopHeight;\n        self.cellphoneRechargeHeightConstraint.constant = kZeroTopHeight;\n    }\n}","plusLine":9},{"functionName":"- (void)setupDDAEnabledVisibility:(CGFloat *)rightColumnHeight {","class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","initialLine":853,"content":"{\n    if ([IPFFeatureToggle isPaymentDDAEnabled]) {\n        [self.DDAView setHidden:NO];\n        self.ddaTopSpaceConstraint.constant = kDefaultTopSpace;\n        self.ddaHeightConstraint.constant = kCellphoneDdaHeightSpace;\n        *rightColumnHeight += kRightColumnHeightCellphoneDda;\n        \n    } else {\n        [self.DDAView setHidden:YES];\n        self.ddaTopSpaceConstraint.constant = kZeroTopHeight;\n        self.ddaHeightConstraint.constant = kZeroTopHeight;\n    }\n}","plusLine":10},{"functionName":"- (void)setupAuthorizedDebitVisibility:(CGFloat *)leftColumnHeight {","class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","initialLine":867,"content":"{\n    if ([IPFFeatureToggle isPaymentAuthorizeDebitEnabled]) {\n        [self.authorizeDebitView setHidden:NO];\n        self.authorizeDebitTopSpaceConstraint.constant = kDefaultTopSpace;\n        self.authorizeDebitHeightConstraint.constant = kAuthorizeDebitHeightConstraint;\n        *leftColumnHeight += kLeftColumnHeightAuthorizedDebit;\n    } else {\n        [self.authorizeDebitView setHidden:YES];\n        self.authorizeDebitTopSpaceConstraint.constant = kZeroTopHeight;\n        self.authorizeDebitHeightConstraint.constant = kZeroTopHeight;\n    }\n}","plusLine":9},{"functionName":"- (void)setupNextPaymentVisibility {","class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","initialLine":880,"content":"{\n    if ([IPFFeatureToggle isPaymentNextPaymentsEnabled]) {\n        [self.nextPaymentsTableView setHidden:NO];\n        [self.loadingView setHidden:NO];\n    } else {\n        [self.nextPaymentsTableView setHidden:YES];\n        [self.loadingView setHidden:YES];\n    }\n}","plusLine":6}],"functionClassMoreThanLimit":[{"class":"@implementation IPFTransfDashboardViewController","plusFunction":33},{"class":"@implementation IPFTransfDashboardViewController (Actions)","plusFunction":11},{"class":"@implementation IPFTransfDashboardViewController (Private)","plusFunction":10},{"class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","plusFunction":3}],"conditionFunctionClassMoreThanLimit":[{"functionName":"- (void)viewWillAppear:(BOOL)animated {","initialLine":186,"class":"@implementation IPFTransfDashboardViewController","content":"{\n    \n    [super viewWillAppear:animated];\n    [self.navigationController setNavigationBarHidden:YES animated:animated];\n    IPFTabBarController* tabBarController = (IPFTabBarController*)self.tabBarController;\n    [tabBarController showTabBarWithAnimation:YES];\n    if (UIAccessibilityIsVoiceOverRunning()) {\n        self.isAccessibilityOn = YES;\n    } else {\n        self.isAccessibilityOn = NO;\n    }\n    if(self.isAccessibilityOn) {\n        self.expanded = YES;\n    }\n    if ([IPFFeatureToggle isPaymentNextPaymentsEnabled]) {\n        if (self.expanded) {\n            self.nextPaymentsTableView.alpha = 0;\n            self.nextPaymentsParentView.alpha = 0;\n            self.transferViewHeightConstraint.constant += self.loadingView.frame.size.height + self.tableViewBottomConstraint.constant;\n            [self.activityIndicator startAnimating];\n            [self loadNextPaymentsWithCompletion:^ {\n                [UIView animateWithDuration:kAnimationDuration animations:^{\n                    self.nextPaymentsParentView.alpha = 1;\n                    self.nextPaymentsTableView.alpha = 1;\n                } completion:^(BOOL finished) {\n                    [self.activityIndicator stopAnimating];\n                    [self calculateTableRows];\n                    [self setNewHeightForTransferDashboard];\n                    [self adjustLayoutWithAnimation];\n                }];\n            }];\n        } else {\n            [self.activityIndicator stopAnimating];\n        }\n    }\n    [self setNewHeightForTransferDashboard];\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(becameActive) name:kApplicationDidBecomeActiveNotification object:nil];\n    [IPFPushHelper refreshNotificationCount];\n    \n    [IPFAnalyticsManager ADBTrackerTrackViewName:kAdobeAnalyticsNavigationTransactions\n                             withContextPageName:kAdobeAnalyticsNavigationTransactions\n                           withContextAppSection:kSectionHomeLoggedAdobeAnalytics\n                          withContextAnalyticsId:[IPFEnvironmentUtil adobeAnalyticsID]\n                           withContextIsLoggedIn: kLoginStateLoggedAdobeAnalytics\n                                    completeWith:nil];\n}","lengthCondition":7,"plusCondition":6},{"functionName":"- (void)featureToggleSetup ","initialLine":250,"class":"@implementation IPFTransfDashboardViewController","content":"{\n    CGFloat leftColumnHeight = kLeftColumnHeight;\n    CGFloat rightColumnHeight = kRightColumnHeight;\n    \n    [self setupCellphoneRechargeVisibility:&rightColumnHeight];\n    [self setupDDAEnabledVisibility:&rightColumnHeight];\n    \n    [self setupAuthorizedDebitVisibility:&leftColumnHeight];\n    [self setupNextPaymentVisibility];\n    \n    if (leftColumnHeight >= rightColumnHeight) {\n        self.contentViewHeightConstraint.constant = leftColumnHeight;\n    } else {\n        self.contentViewHeightConstraint.constant = rightColumnHeight;\n    }\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)addNotificationButton {","initialLine":281,"class":"@implementation IPFTransfDashboardViewController","content":"{\n    if ([IPFPushHelper shouldEnableItauNotificationKit]) {\n        UIButton *notificationButton = [IPFPushHelper injectNotificationButton:[self.view viewWithTag:kHeaderSecondaryButtonTag]];\n        UITapGestureRecognizer *notificationButtonGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(showNotificationCenter)];\n        notificationButtonGesture.numberOfTapsRequired = 1;\n        [notificationButton setUserInteractionEnabled:YES];\n        [notificationButton addGestureRecognizer:notificationButtonGesture];\n    }\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)viewWillDisappear:(BOOL)animated {","initialLine":303,"class":"@implementation IPFTransfDashboardViewController","content":"{\n    \n    [super viewWillDisappear:animated];\n    [[IPFSessionManager sharedManager] updateUserPreference:NextPaymentsVisibilityPreference to:NO];\n    if (self.expanded) {\n        [self.nextPaymentHeader triggerExpandCollapseTable];\n    }\n    [self.tooltip dismissTooltipAnimated:NO];\n    [[NSNotificationCenter defaultCenter] removeObserver:self name:kApplicationDidBecomeActiveNotification object:nil];\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)loadNextPaymentsWithCompletion:(PaymentCompletionCallback)completion {","initialLine":387,"class":"@implementation IPFTransfDashboardViewController","content":"{\n    NSDate *startDate = [NSDate date];\n    NSDate *endDate = [startDate addDays:kNextPaymentsPeriod];\n    __block typeof (self) weakSelf = self;\n    [weakSelf.paymentTimelineManager fetchNextPaymentsUnpaidWithUser:[[IPFSessionManager sharedManager] sessionUser]\n                                                           startDate:startDate\n                                                             endDate:endDate\n                                                          completion:^(NSArray<IPFNextPayment *> *arrayPayments, NSError *error) {\n                                                              if (arrayPayments && arrayPayments.count > 0) {\n                                                                  IPFNextPayment *firstItem = arrayPayments.firstObject;\n                                                                  weakSelf.nextPaymentArray = [weakSelf filterNextPaymentArray:arrayPayments byDate:firstItem.date];\n                                                              }\n                                                              [weakSelf calculateTableRows];\n                                                              [weakSelf loadNextPaymentsView];\n                                                              if (completion) {\n                                                                  completion();\n                                                              }\n                                                          }];\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)calculateTableRows {","initialLine":407,"class":"@implementation IPFTransfDashboardViewController","content":"{\n    \n    if (self.expanded == YES) {\n        if (self.nextPaymentArray.count == 0) {\n            self.tableRows = 2;\n        } else {\n            self.tableRows = 1 + self.nextPaymentArray.count;\n        }\n    } else {\n        self.tableRows = 1;\n    }\n}","lengthCondition":4,"plusCondition":3},{"functionName":"- (void)loadNextPaymentsView {","initialLine":420,"class":"@implementation IPFTransfDashboardViewController","content":"{\n    \n    if (self.nextPaymentArray.count > 0) {\n        self.transferDashboardView.nextPaymentHeaderView.emptyStatus = NO;\n        IPFNextPayment *nextPayment = self.nextPaymentArray.firstObject;\n        self.transferDashboardView.nextPaymentHeaderView.detailLabel.text = nextPayment.formattedCustomDate;\n    }\n    else {\n        self.transferDashboardView.nextPaymentHeaderView.emptyStatus = YES;\n    }\n    self.transferDashboardView.nextPaymentHeaderView.numberOfNextpayments = self.nextPaymentArray.count;\n    [self.transferDashboardView.nextPaymentHeaderView setupAccessibility];\n    [self setNewHeightForTransferDashboard];\n    [self adjustLayoutWithAnimation];\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)setNewHeightForTransferDashboard {","initialLine":436,"class":"@implementation IPFTransfDashboardViewController","content":"{\n    \n    CGFloat headerHeight;\n    CGFloat tableRowsHeight;\n    CGFloat totalHeight;\n    CGRect dashboardFrame = self.transferDashboardView.frame;\n    if (self.view.layer.frame.size.width-kCardMarginsSize > kTableViewNormalWidth) {\n        headerHeight = kHeaderLargeHeight;\n    } else {\n        headerHeight = kHeaderNormalHeight;\n    }\n    if ([IPFFeatureToggle isPaymentNextPaymentsEnabled]) {\n        self.nextPaymentsParentView.hidden = NO;\n        if (self.nextPaymentArray.count == 0) {\n            tableRowsHeight = kErrorCellHeight;\n        } else {\n            tableRowsHeight = self.nextPaymentArray.count * kHeightForRow;\n        }\n        self.nextPaymentsParentViewHeightConstraint.constant = headerHeight;\n        if ([IPFFeatureToggle isTransactionCalendarEnabled]) {\n            self.nextPaymentsParentViewHeightConstraint.constant += kNextPaymentsFooterViewHeight;\n        }\n        if (self.expanded) {\n            self.nextPaymentsParentViewHeightConstraint.constant += tableRowsHeight;\n        }\n        totalHeight = kTransferViewHeightWithoutTable + self.nextPaymentsParentViewHeightConstraint.constant;\n    }\n    else {\n        self.nextPaymentsParentView.hidden = YES;\n        totalHeight = kTransferViewHeightWithoutTable;\n    }\n    self.transferViewHeightConstraint.constant = totalHeight + 16;\n    [self.transferDashboardView setFrame:dashboardFrame];\n}","lengthCondition":8,"plusCondition":7},{"functionName":"- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{","initialLine":497,"class":"@implementation IPFTransfDashboardViewController","content":"{\n    \n    id cell;\n    if (self.expanded && indexPath.row > 0) {\n        if (self.nextPaymentArray.count == 0) {\n            cell = [tableView dequeueReusableCellWithIdentifier:kNextPaymentErrorCellId];\n        } else {\n            IPFNextPayment *nextPayment = self.nextPaymentArray[indexPath.row - 1];\n            cell = [tableView dequeueReusableCellWithIdentifier:[IPFNextPaymentCell cellIdentifier]];\n            NSString *preffixAccessibility = [NSString stringWithFormat:NSLocalizedString(kLocalizedAccessibilityDashboardPaymentNextpaymentCellPreffixplaceholder, nil), indexPath.row + 1, self.nextPaymentArray.count];\n            [cell setupCellWithPayment:nextPayment accessibilityString:preffixAccessibility];\n        }\n    } else {\n        cell = [tableView dequeueReusableCellWithIdentifier:kNextPaymentHeaderCellId];\n        self.nextPaymentHeader = (IPFNextPaymentHeaderTableViewCell *)cell;\n        self.nextPaymentHeader.delegateListener = self;\n        self.nextPaymentHeader.flipButton.hidden = self.isAccessibilityOn;\n    }\n    \n    return cell;\n}","lengthCondition":4,"plusCondition":3},{"functionName":"- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {","initialLine":530,"class":"@implementation IPFTransfDashboardViewController","content":"{\n    \n    CGFloat rowHeight;\n    if (indexPath.row == 0) {\n        rowHeight = tableView.layer.frame.size.width-kCardMarginsSize > kTableViewNormalWidth ? kHeaderLargeHeight : kHeaderNormalHeight;\n    } else {\n        if (self.nextPaymentArray.count == 0) {\n            rowHeight = kErrorCellHeight;\n        } else {\n            rowHeight = kHeightForRow;\n        }\n    }\n    return rowHeight;\n}","lengthCondition":4,"plusCondition":3},{"functionName":"- (void)expandCollapseTable:(IPFFlipButton *)flipButton withIndicator:(UIActivityIndicatorView *)activityIndicator {","initialLine":565,"class":"@implementation IPFTransfDashboardViewController","content":"{\n    \n    if (self.expanded == YES) {\n        [[IPFSessionManager sharedManager] updateUserPreference:NextPaymentsVisibilityPreference to:NO];\n        self.expanded = NO;\n        self.tableRows = 1;\n        [self calculateTableRows];\n        [flipButton setExpanded:self.expanded];\n        [self setNewHeightForTransferDashboard];\n        [self adjustLayoutWithAnimation];\n        \n    } else {\n        [[IPFSessionManager sharedManager] updateUserPreference:NextPaymentsVisibilityPreference to:YES];\n        self.expanded = YES;\n        [UIView animateWithDuration:kAnimationDuration animations:^{\n            flipButton.alpha = 0;\n            activityIndicator.alpha = 1;\n        } completion:^(BOOL finished) {\n            [activityIndicator startAnimating];\n            [self loadNextPaymentsWithCompletion:^ {\n                [UIView animateWithDuration:kAnimationDuration animations:^{\n                    flipButton.alpha = 1;\n                    [flipButton setExpanded:self.expanded];\n                    activityIndicator.alpha = 0;\n                } completion:^(BOOL finished) {\n                    [activityIndicator stopAnimating];\n                    [self calculateTableRows];\n                    [self setNewHeightForTransferDashboard];\n                    [self adjustLayoutWithAnimation];\n                }];\n            }];\n        }];\n    }\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (IBAction)didClickPayAccountView:(id)sender {","initialLine":635,"class":"@implementation IPFTransfDashboardViewController (Actions)","content":"{\n    \n    if ([IPFSessionManager sharedManager].currentAccountIsUnderContingency) {\n        __weak __block typeof(IPFContingencyErrorViewController *)paymentWarningVC = (IPFContingencyErrorViewController *)[IPFStoryboardUtil contingencyPaymentWarningViewController];\n        __weak __block typeof(self) weakSelf = self;\n        paymentWarningVC.proceedToNextScreenBlock = ^void(void) {\n            [paymentWarningVC dismissViewControllerAnimated:YES completion:^{\n                [weakSelf handlePaymentClickAction];\n            }];\n        };\n        [self presentViewController:paymentWarningVC animated:YES completion:nil];\n    }\n    else {\n        [self handlePaymentClickAction];\n    }\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)handlePaymentClickAction {","initialLine":652,"class":"@implementation IPFTransfDashboardViewController (Actions)","content":"{\n    \n    if (UIAccessibilityIsVoiceOverRunning()) {\n        [self openInputCodebarWithValue:@\"\"];\n    } else {\n        __weak __block typeof(self) weakSelf = self;\n        [IPFEnvironmentUtil requestCameraAccessWithCompletion:^(NSString *messageFailed, BOOL granted) {\n            if (granted) {\n                \n                [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard action:kGAActionAbrirCamera label:nil value:nil];\n                [weakSelf presentViewController:[IPFStoryboardUtil barcodeReaderNavigationControllerWithDelegate:weakSelf] animated:YES completion:nil];\n            }\n            else {\n                if ([UIAlertController class]) {\n                    UIAlertController *alert = [UIAlertController alertControllerWithTitle:nil message:messageFailed preferredStyle:UIAlertControllerStyleAlert];\n                    \n                    UIAlertAction *inputCodebarAction = [UIAlertAction actionWithTitle:NSLocalizedString(kLocalizedDefaultLabelDigitecodigo, nil) style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {\n                        \n                        [weakSelf openInputCodebarWithValue:@\"\"];\n                    }];\n                    UIAlertAction *okAction = [UIAlertAction actionWithTitle:NSLocalizedString(kLocalizedButtonOk, nil) style:UIAlertActionStyleDefault handler:nil];\n                    \n                    [alert addAction:inputCodebarAction];\n                    [alert addAction:okAction];\n                    \n                    [weakSelf presentViewController:alert animated:YES completion:nil];\n                }\n                else {\n                    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:messageFailed\n                                                                    message:nil\n                                                                   delegate:weakSelf\n                                                          cancelButtonTitle:NSLocalizedString(kLocalizedButtonOk, nil) otherButtonTitles:NSLocalizedString(kLocalizedDefaultLabelDigitecodigo, nil), nil];\n                    [alert show];\n                    weakSelf.requestCameraAlertView = alert;\n                }\n            }\n        }];\n    }\n}","lengthCondition":6,"plusCondition":5},{"functionName":"- (void)didTapToAccessNewControllerWithView:(UIView *)view type:(TransferType)type {","initialLine":806,"class":"@implementation IPFTransfDashboardViewController (Private)","content":"{\n    \n    IPFMenuItemNew *item = [[IPFMenuItemNew alloc] init];\n    if (type == DDA) {\n        item.chaveMobile = kDDAOpKey;\n        item.nome = NSLocalizedString(kLocalizedPaymentTitleDda, nil);\n        [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard action:kGALabelDda label:nil value:nil];\n    } else if (type == DAI) {\n        item.chaveMobile = kDAIOpKey;\n        item.nome = NSLocalizedString(kLocalizedPaymentTitleDai, nil);\n        [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard action:kGALabelDai label:nil value:nil];\n    }\n    if (item.chaveMobile && item.chaveMobile.length > 0) {\n        [[NSNotificationCenter defaultCenter] postNotificationName:kShowMenuItemNotification object:nil userInfo:@{ kMenuItemNotificationKey : item }];\n    }\n}","lengthCondition":4,"plusCondition":3},{"functionName":"- (void)setupCellphoneRechargeVisibility:(CGFloat *)rightColumnHeight {","initialLine":840,"class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","content":"{\n    if ([IPFFeatureToggle isPaymentCellphoneRechargeEnabled]) {\n        [self.topUpPhoneView setHidden:NO];\n        self.cellphoneRechargeTopSpaceConstraint.constant = kDefaultTopSpace;\n        self.cellphoneRechargeHeightConstraint.constant = kCellphoneDdaHeightSpace;\n        *rightColumnHeight += kRightColumnHeightCellphoneDda;\n    } else {\n        [self.topUpPhoneView setHidden:YES];\n        self.cellphoneRechargeTopSpaceConstraint.constant = kZeroTopHeight;\n        self.cellphoneRechargeHeightConstraint.constant = kZeroTopHeight;\n    }\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)setupDDAEnabledVisibility:(CGFloat *)rightColumnHeight {","initialLine":853,"class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","content":"{\n    if ([IPFFeatureToggle isPaymentDDAEnabled]) {\n        [self.DDAView setHidden:NO];\n        self.ddaTopSpaceConstraint.constant = kDefaultTopSpace;\n        self.ddaHeightConstraint.constant = kCellphoneDdaHeightSpace;\n        *rightColumnHeight += kRightColumnHeightCellphoneDda;\n        \n    } else {\n        [self.DDAView setHidden:YES];\n        self.ddaTopSpaceConstraint.constant = kZeroTopHeight;\n        self.ddaHeightConstraint.constant = kZeroTopHeight;\n    }\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)setupAuthorizedDebitVisibility:(CGFloat *)leftColumnHeight {","initialLine":867,"class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","content":"{\n    if ([IPFFeatureToggle isPaymentAuthorizeDebitEnabled]) {\n        [self.authorizeDebitView setHidden:NO];\n        self.authorizeDebitTopSpaceConstraint.constant = kDefaultTopSpace;\n        self.authorizeDebitHeightConstraint.constant = kAuthorizeDebitHeightConstraint;\n        *leftColumnHeight += kLeftColumnHeightAuthorizedDebit;\n    } else {\n        [self.authorizeDebitView setHidden:YES];\n        self.authorizeDebitTopSpaceConstraint.constant = kZeroTopHeight;\n        self.authorizeDebitHeightConstraint.constant = kZeroTopHeight;\n    }\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)setupNextPaymentVisibility {","initialLine":880,"class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","content":"{\n    if ([IPFFeatureToggle isPaymentNextPaymentsEnabled]) {\n        [self.nextPaymentsTableView setHidden:NO];\n        [self.loadingView setHidden:NO];\n    } else {\n        [self.nextPaymentsTableView setHidden:YES];\n        [self.loadingView setHidden:YES];\n    }\n}","lengthCondition":2,"plusCondition":1}],"template":{"castle":false,"hero":{"position":40,"type":"hit","size":0},"bug":{"position":0,"type":"default","size":0}}}