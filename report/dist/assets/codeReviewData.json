{"functionLineMoreThanLimit":[{"functionName":"- (NSArray *)filterNextPaymentArray:(NSArray<IPFNextPayment *> *)array","class":"@implementation IPFTransfDashboardViewController","initialLine":188,"content":"{\n  [super viewDidLayoutSubviews];\n  [self.transferDashboardView layoutIfNeeded];\n  [self.transferDashboardView updateConstraintsIfNeeded];\n}","plusLine":2},{"functionName":"- (void)didTapToAccessNewControllerWithView:(UIView *)view","class":"@implementation IPFTransfDashboardViewController","initialLine":194,"content":"{\n\n  [super viewWillAppear:animated];\n  [self.navigationController setNavigationBarHidden:YES animated:animated];\n  IPFTabBarController *tabBarController =\n      (IPFTabBarController *)self.tabBarController;\n  [tabBarController showTabBarWithAnimation:YES];\n  if (UIAccessibilityIsVoiceOverRunning()) {\n    self.isAccessibilityOn = YES;\n  } else {\n    self.isAccessibilityOn = NO;\n  }\n  if (self.isAccessibilityOn) {\n    self.expanded = YES;\n  }\n  if ([IPFFeatureToggle isPaymentNextPaymentsEnabled]) {\n    if (self.expanded) {\n      self.nextPaymentsTableView.alpha = 0;\n      self.nextPaymentsParentView.alpha = 0;\n      self.transferViewHeightConstraint.constant +=\n          self.loadingView.frame.size.height +\n          self.tableViewBottomConstraint.constant;\n      [self.activityIndicator startAnimating];\n      [self loadNextPaymentsWithCompletion:^{\n        [UIView animateWithDuration:kAnimationDuration\n            animations:^{\n              self.nextPaymentsParentView.alpha = 1;\n              self.nextPaymentsTableView.alpha = 1;\n            }\n            completion:^(BOOL finished) {\n              [self.activityIndicator stopAnimating];\n              [self calculateTableRows];\n              [self setNewHeightForTransferDashboard];\n              [self adjustLayoutWithAnimation];\n            }];\n      }];\n    } else {\n      [self.activityIndicator stopAnimating];\n    }\n  }\n  [self setNewHeightForTransferDashboard];\n  [[NSNotificationCenter defaultCenter]\n      addObserver:self\n         selector:@selector(becameActive)\n             name:kApplicationDidBecomeActiveNotification\n           object:nil];\n  [IPFPushHelper refreshNotificationCount];\n\n  [IPFAnalyticsManager\n      ADBTrackerTrackViewName:kAdobeAnalyticsNavigationTransactions\n          withContextPageName:kAdobeAnalyticsNavigationTransactions\n        withContextAppSection:kSectionHomeLoggedAdobeAnalytics\n       withContextAnalyticsId:[IPFEnvironmentUtil adobeAnalyticsID]\n        withContextIsLoggedIn:kLoginStateLoggedAdobeAnalytics\n                 completeWith:nil];\n}","plusLine":53},{"functionName":"- (void)viewDidLoad {","class":"@implementation IPFTransfDashboardViewController","initialLine":251,"content":"{\n  if (!_paymentTimelineManager) {\n    _paymentTimelineManager = [IPFPaymentTimelineManager new];\n  }\n  return _paymentTimelineManager;\n}","plusLine":3},{"functionName":"- (void)viewDidLayoutSubviews {","class":"@implementation IPFTransfDashboardViewController","initialLine":258,"content":"{\n\n  [self.nextPaymentsTableView\n                 registerNib:[UINib\n                                 nibWithNibName:NSStringFromClass(\n                                                    [IPFNextPaymentCell class])\n                                         bundle:nil]\n      forCellReuseIdentifier:[IPFNextPaymentCell cellIdentifier]];\n  [self.nextPaymentsTableView\n                 registerNib:\n                     [UINib nibWithNibName:\n                                NSStringFromClass(\n                                    [IPFNextPaymentHeaderTableViewCell class])\n                                    bundle:nil]\n      forCellReuseIdentifier:kNextPaymentHeaderCellId];\n  [self.nextPaymentsTableView\n                 registerNib:\n                     [UINib nibWithNibName:\n                                NSStringFromClass(\n                                    [IPFNextPaymentErrorTableViewCell class])\n                                    bundle:nil]\n      forCellReuseIdentifier:kNextPaymentErrorCellId];\n}","plusLine":20},{"functionName":"- (void)viewWillAppear:(BOOL)animated {","class":"@implementation IPFTransfDashboardViewController","initialLine":282,"content":"{\n  CGFloat leftColumnHeight = kLeftColumnHeight;\n  CGFloat rightColumnHeight = kRightColumnHeight;\n\n  [self setupCellphoneRechargeVisibility:&rightColumnHeight];\n  [self setupDDAEnabledVisibility:&rightColumnHeight];\n\n  [self setupAuthorizedDebitVisibility:&leftColumnHeight];\n  [self setupNextPaymentVisibility];\n\n  if (leftColumnHeight >= rightColumnHeight) {\n    self.contentViewHeightConstraint.constant = leftColumnHeight;\n  } else {\n    self.contentViewHeightConstraint.constant = rightColumnHeight;\n  }\n}","plusLine":13},{"functionName":"- (IPFPaymentTimelineManager *)paymentTimelineManager {","class":"@implementation IPFTransfDashboardViewController","initialLine":299,"content":"{\n\n  IPFHeaderAccountView *headerView = [self.view viewWithTag:kHeaderAccountTag];\n  UITapGestureRecognizer *callMenu = [[UITapGestureRecognizer alloc]\n      initWithTarget:self\n              action:@selector(showUserProfile)];\n  callMenu.numberOfTapsRequired = 1;\n  [headerView setUserInteractionEnabled:YES];\n  [headerView addGestureRecognizer:callMenu];\n  UIButton *headerSearchButton = [self.view viewWithTag:kSearchButtonTag];\n  UITapGestureRecognizer *callSearchView =\n      [[UITapGestureRecognizer alloc] initWithTarget:self\n                                              action:@selector(showSearchView)];\n  callSearchView.numberOfTapsRequired = 1;\n  [headerSearchButton setUserInteractionEnabled:YES];\n  [headerSearchButton addGestureRecognizer:callSearchView];\n}","plusLine":14},{"functionName":"- (void)registerNibs {","class":"@implementation IPFTransfDashboardViewController","initialLine":317,"content":"{\n  if ([IPFPushHelper shouldEnableItauNotificationKit]) {\n    UIButton *notificationButton = [IPFPushHelper\n        injectNotificationButton:[self.view\n                                     viewWithTag:kHeaderSecondaryButtonTag]];\n    UITapGestureRecognizer *notificationButtonGesture =\n        [[UITapGestureRecognizer alloc]\n            initWithTarget:self\n                    action:@selector(showNotificationCenter)];\n    notificationButtonGesture.numberOfTapsRequired = 1;\n    [notificationButton setUserInteractionEnabled:YES];\n    [notificationButton addGestureRecognizer:notificationButtonGesture];\n  }\n}","plusLine":11},{"functionName":"- (void)featureToggleSetup {","class":"@implementation IPFTransfDashboardViewController","initialLine":332,"content":"{\n  [self.navigationController setNavigationBarHidden:NO animated:NO];\n  [ItauNotificationKit openNotificationCentral:self.navigationController];\n}","plusLine":1},{"functionName":"- (void)setupHeaderAccountView {","class":"@implementation IPFTransfDashboardViewController","initialLine":337,"content":"{\n  IMSearchViewController *searchViewController =\n      [IPFStoryboardUtil searchViewController];\n  searchViewController.modalPresentationStyle = UIModalPresentationCustom;\n  [self.navigationController setNavigationBarHidden:NO animated:NO];\n  [self.navigationController pushViewController:searchViewController\n                                       animated:YES];\n}","plusLine":5},{"functionName":"- (void)addNotificationButton {","class":"@implementation IPFTransfDashboardViewController","initialLine":346,"content":"{\n\n  [super viewWillDisappear:animated];\n  [[IPFSessionManager sharedManager]\n      updateUserPreference:NextPaymentsVisibilityPreference\n                        to:NO];\n  if (self.expanded) {\n    [self.nextPaymentHeader triggerExpandCollapseTable];\n  }\n  [self.tooltip dismissTooltipAnimated:NO];\n  [[NSNotificationCenter defaultCenter]\n      removeObserver:self\n                name:kApplicationDidBecomeActiveNotification\n              object:nil];\n}","plusLine":12},{"functionName":"- (void)showNotificationCenter {","class":"@implementation IPFTransfDashboardViewController","initialLine":362,"content":"{\n  [super viewDidAppear:animated];\n  [self fillBarCodeWithPasteBoard];\n  [rateAlert showRateTransactionIfSuitable];\n}","plusLine":2},{"functionName":"- (void)showSearchView {","class":"@implementation IPFTransfDashboardViewController","initialLine":368,"content":"{\n\n  NSDateFormatter *dateFormat = [NSDateFormatter new];\n  [dateFormat setDateFormat:NSLocalizedString(kTypeOfDate, nil)];\n  NSInteger day = [[dateFormat stringFromDate:[NSDate date]] intValue];\n  self.titleFirstRow.text = [NSString\n      stringWithFormat:NSLocalizedString(kLocalizedTitleFirstrowLabel, nil),\n                       (long)day];\n}","plusLine":6},{"functionName":"- (void)viewWillDisappear:(BOOL)animated {","class":"@implementation IPFTransfDashboardViewController","initialLine":378,"content":"{\n\n  if ([IPFEnvironmentUtil isPersonnalite] ||\n      [IPFSessionManager sharedManager].sessionUser.isPersonnalite) {\n    [self.titleFirstRow setTextColor:[UIColor personnaliteColor]];\n    [self.payAccountIcon setTextColor:[UIColor personnaliteColor]];\n    [self.realizeTransferIcon setTextColor:[UIColor personnaliteColor]];\n    [self.depositCheckIcon setTextColor:[UIColor personnaliteColor]];\n    [self.topUpPhoneIcon setTextColor:[UIColor personnaliteColor]];\n    [self.DDAIcon setTextColor:[UIColor personnaliteColor]];\n    [self.authorizeDebitIcon setTextColor:[UIColor personnaliteColor]];\n  }\n}","plusLine":10},{"functionName":"- (void)viewDidAppear:(BOOL)animated {","class":"@implementation IPFTransfDashboardViewController","initialLine":391,"content":"{\n\n  [self setStyleBorderInView:self.payAccountView];\n  [self setStyleBorderInView:self.realizeTransferView];\n  [self setStyleBorderInView:self.topUpPhoneView];\n  [self setStyleBorderInView:self.authorizeDebitView];\n  [self setStyleBorderInView:self.DDAView];\n  [self setStyleBorderInView:self.nextPaymentsParentView];\n}","plusLine":6},{"functionName":"- (void)setCurrentDayToTitleLabel {","class":"@implementation IPFTransfDashboardViewController","initialLine":401,"content":"{\n\n  view.layer.cornerRadius = kCardCornerRadius;\n  view.layer.shadowColor = [UIColor cardShadowColor].CGColor;\n  view.layer.masksToBounds = NO;\n  view.layer.shadowOffset = CGSizeMake(kCardShadowOffsetX, kCardShadowOffsetY);\n  view.layer.shadowRadius = kCardShadowRadius;\n  view.layer.shadowOpacity = kCardShadowOpacity;\n}","plusLine":6},{"functionName":"- (void)setPersonnaliteColor {","class":"@implementation IPFTransfDashboardViewController","initialLine":411,"content":"{\n\n  [self.payAccountView setIsAccessibilityElement:YES];\n  [self.realizeTransferView setIsAccessibilityElement:YES];\n  [self.topUpPhoneView setIsAccessibilityElement:YES];\n  [self.DDAView setIsAccessibilityElement:YES];\n  [self.authorizeDebitView setIsAccessibilityElement:YES];\n  [self.payAccountView\n      setAccessibilityLabel:NSLocalizedString(\n                                kLocalizedPayAccountViewAccessibilityLabel,\n                                nil)];\n  [self.realizeTransferView\n      setAccessibilityLabel:NSLocalizedString(\n                                kLocalizedRealizeTransferViewAccessibilityLabel,\n                                nil)];\n  [self.topUpPhoneView\n      setAccessibilityLabel:NSLocalizedString(\n                                kLocalizedTopUpPhoneViewAccessibilityLabel,\n                                nil)];\n  [self.DDAView\n      setAccessibilityLabel:NSLocalizedString(\n                                kLocalizedDDAViewAccessibilityLabel, nil)];\n  [self.authorizeDebitView\n      setAccessibilityLabel:NSLocalizedString(\n                                kLocalizedAuthorizeDebitViewAccessibilityLabel,\n                                nil)];\n}","plusLine":24},{"functionName":"- (void)setStyleToCards {","class":"@implementation IPFTransfDashboardViewController","initialLine":439,"content":"{\n  if (![IPFFeatureToggle isTransactionCalendarEnabled]) {\n    return;\n  }\n  [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard\n                                      action:kGAActionProximosPagamentos\n                                       label:nil\n                                       value:nil];\n  IPFPaymentCalendarTimelineViewController *calendarTimelineVC =\n      [IPFStoryboardUtil paymentCalendarTimelineViewController];\n  [self.navigationController pushViewController:calendarTimelineVC\n                                       animated:YES];\n}","plusLine":10},{"functionName":"- (void)setStyleBorderInView:(UIView *)view {","class":"@implementation IPFTransfDashboardViewController","initialLine":454,"content":"{\n  NSDate *startDate = [NSDate date];\n  NSDate *endDate = [startDate addDays:kNextPaymentsPeriod];\n  __block typeof(self) weakSelf = self;\n  [weakSelf.paymentTimelineManager\n      fetchNextPaymentsUnpaidWithUser:[[IPFSessionManager sharedManager]\n                                          sessionUser]\n                            startDate:startDate\n                              endDate:endDate\n                           completion:^(\n                               NSArray<IPFNextPayment *> *arrayPayments,\n                               NSError *error) {\n                             if (arrayPayments && arrayPayments.count > 0) {\n                               IPFNextPayment *firstItem =\n                                   arrayPayments.firstObject;\n                               weakSelf.nextPaymentArray = [weakSelf\n                                   filterNextPaymentArray:arrayPayments\n                                                   byDate:firstItem.date];\n                             }\n                             [weakSelf calculateTableRows];\n                             [weakSelf loadNextPaymentsView];\n                             if (completion) {\n                               completion();\n                             }\n                           }];\n}","plusLine":23},{"functionName":"- (void)setAccessibilityOnCards {","class":"@implementation IPFTransfDashboardViewController","initialLine":481,"content":"{\n\n  if (self.expanded == YES) {\n    if (self.nextPaymentArray.count == 0) {\n      self.tableRows = 2;\n    } else {\n      self.tableRows = 1 + self.nextPaymentArray.count;\n    }\n  } else {\n    self.tableRows = 1;\n  }\n}","plusLine":9},{"functionName":"- (void)openCalendarTimeline {","class":"@implementation IPFTransfDashboardViewController","initialLine":494,"content":"{\n\n  if (self.nextPaymentArray.count > 0) {\n    self.transferDashboardView.nextPaymentHeaderView.emptyStatus = NO;\n    IPFNextPayment *nextPayment = self.nextPaymentArray.firstObject;\n    self.transferDashboardView.nextPaymentHeaderView.detailLabel.text =\n        nextPayment.formattedCustomDate;\n  } else {\n    self.transferDashboardView.nextPaymentHeaderView.emptyStatus = YES;\n  }\n  self.transferDashboardView.nextPaymentHeaderView.numberOfNextpayments =\n      self.nextPaymentArray.count;\n  [self.transferDashboardView.nextPaymentHeaderView setupAccessibility];\n  [self setNewHeightForTransferDashboard];\n  [self adjustLayoutWithAnimation];\n}","plusLine":13},{"functionName":"- (void)loadNextPaymentsWithCompletion:(PaymentCompletionCallback)completion {","class":"@implementation IPFTransfDashboardViewController","initialLine":511,"content":"{\n\n  CGFloat headerHeight;\n  CGFloat tableRowsHeight;\n  CGFloat totalHeight;\n  CGRect dashboardFrame = self.transferDashboardView.frame;\n  if (self.view.layer.frame.size.width - kCardMarginsSize >\n      kTableViewNormalWidth) {\n    headerHeight = kHeaderLargeHeight;\n  } else {\n    headerHeight = kHeaderNormalHeight;\n  }\n  if ([IPFFeatureToggle isPaymentNextPaymentsEnabled]) {\n    self.nextPaymentsParentView.hidden = NO;\n    if (self.nextPaymentArray.count == 0) {\n      tableRowsHeight = kErrorCellHeight;\n    } else {\n      tableRowsHeight = self.nextPaymentArray.count * kHeightForRow;\n    }\n    self.nextPaymentsParentViewHeightConstraint.constant = headerHeight;\n    if ([IPFFeatureToggle isTransactionCalendarEnabled]) {\n      self.nextPaymentsParentViewHeightConstraint.constant +=\n          kNextPaymentsFooterViewHeight;\n    }\n    if (self.expanded) {\n      self.nextPaymentsParentViewHeightConstraint.constant += tableRowsHeight;\n    }\n    totalHeight = kTransferViewHeightWithoutTable +\n                  self.nextPaymentsParentViewHeightConstraint.constant;\n  } else {\n    self.nextPaymentsParentView.hidden = YES;\n    totalHeight = kTransferViewHeightWithoutTable;\n  }\n  self.transferViewHeightConstraint.constant = totalHeight + 16;\n  [self.transferDashboardView setFrame:dashboardFrame];\n}","plusLine":33},{"functionName":"- (void)calculateTableRows {","class":"@implementation IPFTransfDashboardViewController","initialLine":551,"content":"{\n  if (alertView == self.requestCameraAlertView &&\n      buttonIndex == 1) { // Digitar código\n    [self openInputCodebarWithValue:@\"\"];\n  }\n}","plusLine":3},{"functionName":"- (void)loadNextPaymentsView {","class":"@implementation IPFTransfDashboardViewController","initialLine":561,"content":"{\n\n  [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard\n                                      action:kGAActionBotaoPagarBoleto\n                                       label:nil\n                                       value:nil];\n\n  IPFPaymentSecondStepViewController *secondStepVC =\n      [IPFStoryboardUtil paymentSecondStepController];\n  secondStepVC.modelContainer.response.headers = responseObj.headers;\n  secondStepVC.modelContainer.response = responseObj;\n  [self.navigationController pushViewController:secondStepVC animated:NO];\n}","plusLine":10},{"functionName":"- (void)alertView:(UIAlertView *)alertView","class":"@implementation IPFTransfDashboardViewController","initialLine":583,"content":"{\n\n  id cell;\n  if (self.expanded && indexPath.row > 0) {\n    if (self.nextPaymentArray.count == 0) {\n      cell =\n          [tableView dequeueReusableCellWithIdentifier:kNextPaymentErrorCellId];\n    } else {\n      IPFNextPayment *nextPayment = self.nextPaymentArray[indexPath.row - 1];\n      cell = [tableView dequeueReusableCellWithIdentifier:[IPFNextPaymentCell\n                                                              cellIdentifier]];\n      NSString *preffixAccessibility = [NSString\n          stringWithFormat:\n              NSLocalizedString(\n                  kLocalizedAccessibilityDashboardPaymentNextpaymentCellPreffixplaceholder,\n                  nil),\n              indexPath.row + 1, self.nextPaymentArray.count];\n      [cell setupCellWithPayment:nextPayment\n             accessibilityString:preffixAccessibility];\n    }\n  } else {\n    cell =\n        [tableView dequeueReusableCellWithIdentifier:kNextPaymentHeaderCellId];\n    self.nextPaymentHeader = (IPFNextPaymentHeaderTableViewCell *)cell;\n    self.nextPaymentHeader.delegateListener = self;\n    self.nextPaymentHeader.flipButton.hidden = self.isAccessibilityOn;\n  }\n\n  return cell;\n}","plusLine":27},{"functionName":"- (void)barcodeInput:(IPFBarcodeInputViewController *)inputBarcodeVC","class":"@implementation IPFTransfDashboardViewController","initialLine":615,"content":"{\n  if ([IPFFeatureToggle isTransactionCalendarEnabled]) {\n    IPFPaymentNextPaymentsFooterView *tableFooterView =\n        [IPFPaymentNextPaymentsFooterView new];\n    tableFooterView.delegate = self;\n    return tableFooterView;\n  }\n  return nil;\n}","plusLine":6},{"functionName":"- (NSInteger)tableView:(UITableView *)tableView","class":"@implementation IPFTransfDashboardViewController","initialLine":628,"content":"{\n\n  CGFloat rowHeight;\n  if (indexPath.row == 0) {\n    rowHeight = tableView.layer.frame.size.width - kCardMarginsSize >\n                        kTableViewNormalWidth\n                    ? kHeaderLargeHeight\n                    : kHeaderNormalHeight;\n  } else {\n    if (self.nextPaymentArray.count == 0) {\n      rowHeight = kErrorCellHeight;\n    } else {\n      rowHeight = kHeightForRow;\n    }\n  }\n  return rowHeight;\n}","plusLine":14},{"functionName":"- (UITableViewCell *)tableView:(UITableView *)tableView","class":"@implementation IPFTransfDashboardViewController","initialLine":647,"content":"{\n  if ([IPFFeatureToggle isTransactionCalendarEnabled]) {\n    return kNextPaymentsFooterViewHeight;\n  }\n  return kNextPaymentsFooterViewHeightWhenNotShow;\n}","plusLine":3},{"functionName":"- (nullable UIView *)tableView:(UITableView *)tableView","class":"@implementation IPFTransfDashboardViewController","initialLine":655,"content":"{\n  if (indexPath.row == 0 && [IPFFeatureToggle isTransactionCalendarEnabled]) {\n    [self openCalendarTimeline];\n  }\n}","plusLine":2},{"functionName":"- (CGFloat)tableView:(UITableView *)tableView","class":"@implementation IPFTransfDashboardViewController","initialLine":670,"content":"{\n\n  if (self.expanded == YES) {\n    [[IPFSessionManager sharedManager]\n        updateUserPreference:NextPaymentsVisibilityPreference\n                          to:NO];\n    self.expanded = NO;\n    self.tableRows = 1;\n    [self calculateTableRows];\n    [flipButton setExpanded:self.expanded];\n    [self setNewHeightForTransferDashboard];\n    [self adjustLayoutWithAnimation];\n\n  } else {\n    [[IPFSessionManager sharedManager]\n        updateUserPreference:NextPaymentsVisibilityPreference\n                          to:YES];\n    self.expanded = YES;\n    [UIView animateWithDuration:kAnimationDuration\n        animations:^{\n          flipButton.alpha = 0;\n          activityIndicator.alpha = 1;\n        }\n        completion:^(BOOL finished) {\n          [activityIndicator startAnimating];\n          [self loadNextPaymentsWithCompletion:^{\n            [UIView animateWithDuration:kAnimationDuration\n                animations:^{\n                  flipButton.alpha = 1;\n                  [flipButton setExpanded:self.expanded];\n                  activityIndicator.alpha = 0;\n                }\n                completion:^(BOOL finished) {\n                  [activityIndicator stopAnimating];\n                  [self calculateTableRows];\n                  [self setNewHeightForTransferDashboard];\n                  [self adjustLayoutWithAnimation];\n                }];\n          }];\n        }];\n  }\n}","plusLine":39},{"functionName":"- (void)tableView:(UITableView *)tableView","class":"@implementation IPFTransfDashboardViewController","initialLine":713,"content":"{\n\n  [UIView\n      animateWithDuration:kAnimationDuration\n               animations:^{\n                 [self.transferDashboardView setNeedsLayout];\n                 [self.transferDashboardView layoutIfNeeded];\n                 [self.transferDashboardView.nextPaymentsTableView reloadData];\n               }\n               completion:^(BOOL finished){\n               }];\n}","plusLine":9},{"functionName":"- (void)didTouchUpInsideSeeMorePaymentsOnNextPaymentsFooterView:","class":"@implementation IPFTransfDashboardViewController","initialLine":728,"content":"{\n  if (touch.view == self.tooltip.tooltipView) {\n    return NO;\n  }\n  return YES;\n}","plusLine":3},{"functionName":"- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer","class":"@implementation IPFTransfDashboardViewController (Actions)","initialLine":747,"content":"{\n\n  IPFPhoneRechargeViewController *phoneRechargeViewController =\n      [IPFStoryboardUtil phoneRechargeViewController];\n  [self.navigationController pushViewController:phoneRechargeViewController\n                                       animated:YES];\n}","plusLine":4},{"functionName":"- (void)singleTapGestureCaptured:(UITapGestureRecognizer *)gesture {","class":"@implementation IPFTransfDashboardViewController (Actions)","initialLine":755,"content":"{\n\n  if ([IPFSessionManager sharedManager].currentAccountIsUnderContingency) {\n    __weak __block typeof(IPFContingencyErrorViewController *)\n        paymentWarningVC = (IPFContingencyErrorViewController *)\n            [IPFStoryboardUtil contingencyPaymentWarningViewController];\n    __weak __block typeof(self) weakSelf = self;\n    paymentWarningVC.proceedToNextScreenBlock = ^void(void) {\n      [paymentWarningVC\n          dismissViewControllerAnimated:YES\n                             completion:^{\n                               [weakSelf handlePaymentClickAction];\n                             }];\n    };\n    [self presentViewController:paymentWarningVC animated:YES completion:nil];\n  } else {\n    [self handlePaymentClickAction];\n  }\n}","plusLine":16},{"functionName":"- (void)openRechargeView {","class":"@implementation IPFTransfDashboardViewController (Actions)","initialLine":775,"content":"{\n\n  if (UIAccessibilityIsVoiceOverRunning()) {\n    [self openInputCodebarWithValue:@\"\"];\n  } else {\n    __weak __block typeof(self) weakSelf = self;\n    [IPFEnvironmentUtil requestCameraAccessWithCompletion:^(\n                            NSString *messageFailed, BOOL granted) {\n      if (granted) {\n\n        [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard\n                                            action:kGAActionAbrirCamera\n                                             label:nil\n                                             value:nil];\n        [weakSelf\n            presentViewController:\n                [IPFStoryboardUtil\n                    barcodeReaderNavigationControllerWithDelegate:weakSelf]\n                         animated:YES\n                       completion:nil];\n      } else {\n        if ([UIAlertController class]) {\n          UIAlertController *alert = [UIAlertController\n              alertControllerWithTitle:nil\n                               message:messageFailed\n                        preferredStyle:UIAlertControllerStyleAlert];\n\n          UIAlertAction *inputCodebarAction = [UIAlertAction\n              actionWithTitle:NSLocalizedString(\n                                  kLocalizedDefaultLabelDigitecodigo, nil)\n                        style:UIAlertActionStyleDefault\n                      handler:^(UIAlertAction *_Nonnull action) {\n\n                        [weakSelf openInputCodebarWithValue:@\"\"];\n                      }];\n          UIAlertAction *okAction = [UIAlertAction\n              actionWithTitle:NSLocalizedString(kLocalizedButtonOk, nil)\n                        style:UIAlertActionStyleDefault\n                      handler:nil];\n\n          [alert addAction:inputCodebarAction];\n          [alert addAction:okAction];\n\n          [weakSelf presentViewController:alert animated:YES completion:nil];\n        } else {\n          UIAlertView *alert = [[UIAlertView alloc]\n                  initWithTitle:messageFailed\n                        message:nil\n                       delegate:weakSelf\n              cancelButtonTitle:NSLocalizedString(kLocalizedButtonOk, nil)\n              otherButtonTitles:NSLocalizedString(\n                                    kLocalizedDefaultLabelDigitecodigo, nil),\n                                nil];\n          [alert show];\n          weakSelf.requestCameraAlertView = alert;\n        }\n      }\n    }];\n  }\n}","plusLine":57},{"functionName":"- (IBAction)didClickTopUpPhoneView:(id)sender {","class":"@implementation IPFTransfDashboardViewController (Actions)","initialLine":836,"content":"{\n  IPFTransferAmountViewController *transferViewController =\n      [IPFStoryboardUtil transferController];\n  [self.navigationController pushViewController:transferViewController\n                                       animated:YES];\n}","plusLine":3},{"functionName":"- (IBAction)didClickDoTransferView:(id)sender {","class":"@implementation IPFTransfDashboardViewController (Actions)","initialLine":851,"content":"{\n\n  //    [self proceedToValidateTermDeposit];\n}","plusLine":1},{"functionName":"- (void)openTransferView {","class":"@implementation IPFTransfDashboardViewController (Actions)","initialLine":860,"content":"{\n\n  [self didTapToAccessNewControllerWithView:sender type:DAI];\n}","plusLine":1},{"functionName":"- (IBAction)didClickDepositPayCheckView:(id)sender {","class":"@implementation IPFTransfDashboardViewController (Actions)","initialLine":865,"content":"{\n  [self presentViewController:\n            [IPFStoryboardUtil\n                inputBarcodeNavigationControllerWithInitialCodeBar:value\n                                                          delegate:self]\n                     animated:YES\n                   completion:nil];\n}","plusLine":5},{"functionName":"- (IBAction)didClickDDARecognizerView:(id)sender {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":878,"content":"{\n\n  dispatch_async(dispatch_get_main_queue(), ^{\n    IPFUserProfileViewController *selectUserProfileViewController =\n        [IPFUserProfileViewController new];\n    IPFPopupNavigationController *popupNavigationController =\n        [[IPFPopupNavigationController alloc]\n            initWithRootViewController:selectUserProfileViewController];\n    [self presentViewController:popupNavigationController\n                       animated:YES\n                     completion:nil];\n  });\n}","plusLine":10},{"functionName":"- (IBAction)didClickAuthorizeDebitView:(id)sender {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":892,"content":"{\n\n  UITapGestureRecognizer *singleTapToCloseTooltip =\n      [[UITapGestureRecognizer alloc]\n          initWithTarget:self\n                  action:@selector(singleTapGestureCaptured:)];\n  singleTapToCloseTooltip.cancelsTouchesInView = NO;\n  singleTapToCloseTooltip.delegate = self;\n  [self.transferDashboardView addGestureRecognizer:singleTapToCloseTooltip];\n}","plusLine":7},{"functionName":"- (void)openInputCodebarWithValue:(NSString *)value {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":903,"content":"{\n\n  [self.tooltip dismissTooltipAnimated:NO];\n  [self fillBarCodeWithPasteBoard];\n}","plusLine":2},{"functionName":"- (void)showUserProfile {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":909,"content":"{\n\n  NSString *text = [[NSUserDefaults standardUserDefaults]\n      objectForKey:kLastUsedTextAtTooltipKey];\n  NSString *barcode = [self pasteBoardText];\n  if (![text isEqualToString:barcode] &&\n      [barcode im_boletoIsValid] == BoletoCompleteAndValid) {\n\n    IMCTooltipConfig *config = [IMCTooltipConfig new];\n    config.text = barcode;\n    config.title =\n        NSLocalizedString(kLocalizedPaymentTolltipPasteboardQuestion, nil);\n    config.backgroundColor = [UIColor azulAtalho];\n    config.animated = YES;\n    config.position = IMCTooltipViewPositionBottomLeft;\n    config.marginInset = UIEdgeInsetsMake(\n        2.f, 0.f, 0.f, CGRectGetMinX(self.payAccountView.frame));\n    [self.tooltip showWithSuperview:self.transferView\n                         anchorView:self.payAccountView\n                      configuration:config];\n    self.tooltip.messageLabel.accessibilityLabel = NSLocalizedString(\n        kLocalizedAccessibilityDashboardPaymentTooltipText, nil);\n    self.tooltip.messageLabel.accessibilityIdentifier = kPasteBarcodeTooltip;\n    self.tooltip.messageLabel.accessibilityTraits = UIAccessibilityTraitButton;\n    [self.tooltip.tooltipView addTarget:self\n                                 action:@selector(tapTooltip:)\n                       forControlEvents:UIControlEventTouchUpInside];\n  }\n}","plusLine":26},{"functionName":"- (void)addScrollViewTapGesture {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":939,"content":"{\n  [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard\n                                      action:kGAActionDigitarCodigoBarras\n                                       label:nil\n                                       value:nil];\n  [self.tooltip dismissTooltipAnimated:NO];\n  [self openInputCodebarWithValue:[self pasteBoardText]];\n  NSUserDefaults *userDefault = [NSUserDefaults standardUserDefaults];\n  [userDefault setObject:[self pasteBoardText] ?: @\"\"\n                  forKey:kLastUsedTextAtTooltipKey];\n  [userDefault synchronize];\n}","plusLine":9},{"functionName":"- (void)becameActive {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":953,"content":"{\n\n  NSPredicate *predicateFilter =\n      [NSPredicate predicateWithBlock:^BOOL(IPFNextPayment *payment,\n                                            NSDictionary *bindings) {\n        return ([payment.date isTheSameDayWithDate:date]);\n      }];\n  return [array filteredArrayUsingPredicate:predicateFilter];\n}","plusLine":6},{"functionName":"- (void)fillBarCodeWithPasteBoard {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":963,"content":"{\n\n  NSPredicate *predicateFilter = [NSPredicate\n      predicateWithBlock:^BOOL(IPFReminder *item, NSDictionary *bindings) {\n        return ([item isKindOfClass:[IPFReminder class]] &&\n                item.reminderDescription.length > 0 && item.expireDate);\n      }];\n  return [array filteredArrayUsingPredicate:predicateFilter];\n}","plusLine":6},{"functionName":"- (void)tapTooltip:(UIControl *)sender {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":973,"content":"{\n\n  [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard\n                                      action:kGAActionVerTodos\n                                       label:nil\n                                       value:nil];\n  IPFCheckingAccountViewController *accountVC =\n      [IPFStoryboardUtil checkingsAccountController];\n  [accountVC setInitialSegmentedSelected:3];\n  [self.navigationController pushViewController:accountVC animated:YES];\n}","plusLine":8},{"functionName":"- (NSArray *)filterNextPaymentArray:(NSArray<IPFNextPayment *> *)array","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":986,"content":"{\n\n  IPFMenuItemNew *item = [[IPFMenuItemNew alloc] init];\n  if (type == DDA) {\n    item.chaveMobile = kDDAOpKey;\n    item.nome = NSLocalizedString(kLocalizedPaymentTitleDda, nil);\n    [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard\n                                        action:kGALabelDda\n                                         label:nil\n                                         value:nil];\n  } else if (type == DAI) {\n    item.chaveMobile = kDAIOpKey;\n    item.nome = NSLocalizedString(kLocalizedPaymentTitleDai, nil);\n    [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard\n                                        action:kGALabelDai\n                                         label:nil\n                                         value:nil];\n  }\n  if (item.chaveMobile && item.chaveMobile.length > 0) {\n    [[NSNotificationCenter defaultCenter]\n        postNotificationName:kShowMenuItemNotification\n                      object:nil\n                    userInfo:@{kMenuItemNotificationKey : item}];\n  }\n}","plusLine":22},{"functionName":"- (NSArray *)filterRemindersArray:(NSArray *)array {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":1012,"content":"{\n\n  IPFMenuItemNew *item = [IPFMenuItemNew new];\n  item.chaveMobile = kCardBillOpKey;\n  item.nome = NSLocalizedString(kLocalizedPaymentTitleBillCard, nil);\n  [[NSNotificationCenter defaultCenter]\n      postNotificationName:kShowMenuItemNotification\n                    object:nil\n                  userInfo:@{kMenuItemNotificationKey : item}];\n}","plusLine":7},{"functionName":"- (void)showNextPaymentsView {","class":"@implementation IPFTransfDashboardViewController (Private)","initialLine":1023,"content":"{\n  UIPasteboard *pasteboard = [UIPasteboard generalPasteboard];\n  return [pasteboard.string im_unformatted];\n}","plusLine":1},{"functionName":"- (void)didTapToAccessNewControllerWithView:(UIView *)view","class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","initialLine":1032,"content":"{\n  if ([IPFFeatureToggle isPaymentCellphoneRechargeEnabled]) {\n    [self.topUpPhoneView setHidden:NO];\n    self.cellphoneRechargeTopSpaceConstraint.constant = kDefaultTopSpace;\n    self.cellphoneRechargeHeightConstraint.constant = kCellphoneDdaHeightSpace;\n    *rightColumnHeight += kRightColumnHeightCellphoneDda;\n  } else {\n    [self.topUpPhoneView setHidden:YES];\n    self.cellphoneRechargeTopSpaceConstraint.constant = kZeroTopHeight;\n    self.cellphoneRechargeHeightConstraint.constant = kZeroTopHeight;\n  }\n}","plusLine":9},{"functionName":"- (void)proceedToPlayCardBill {","class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","initialLine":1045,"content":"{\n  if ([IPFFeatureToggle isPaymentDDAEnabled]) {\n    [self.DDAView setHidden:NO];\n    self.ddaTopSpaceConstraint.constant = kDefaultTopSpace;\n    self.ddaHeightConstraint.constant = kCellphoneDdaHeightSpace;\n    *rightColumnHeight += kRightColumnHeightCellphoneDda;\n\n  } else {\n    [self.DDAView setHidden:YES];\n    self.ddaTopSpaceConstraint.constant = kZeroTopHeight;\n    self.ddaHeightConstraint.constant = kZeroTopHeight;\n  }\n}","plusLine":10},{"functionName":"- (NSString *)pasteBoardText {","class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","initialLine":1059,"content":"{\n  if ([IPFFeatureToggle isPaymentAuthorizeDebitEnabled]) {\n    [self.authorizeDebitView setHidden:NO];\n    self.authorizeDebitTopSpaceConstraint.constant = kDefaultTopSpace;\n    self.authorizeDebitHeightConstraint.constant =\n        kAuthorizeDebitHeightConstraint;\n    *leftColumnHeight += kLeftColumnHeightAuthorizedDebit;\n  } else {\n    [self.authorizeDebitView setHidden:YES];\n    self.authorizeDebitTopSpaceConstraint.constant = kZeroTopHeight;\n    self.authorizeDebitHeightConstraint.constant = kZeroTopHeight;\n  }\n}","plusLine":10},{"functionName":"- (void)setupCellphoneRechargeVisibility:(CGFloat *)rightColumnHeight {","class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","initialLine":1073,"content":"{\n  if ([IPFFeatureToggle isPaymentNextPaymentsEnabled]) {\n    [self.nextPaymentsTableView setHidden:NO];\n    [self.loadingView setHidden:NO];\n  } else {\n    [self.nextPaymentsTableView setHidden:YES];\n    [self.loadingView setHidden:YES];\n  }\n}","plusLine":6}],"functionClassMoreThanLimit":[{"class":"@implementation IPFTransfDashboardViewController","plusFunction":32},{"class":"@implementation IPFTransfDashboardViewController (Actions)","plusFunction":11},{"class":"@implementation IPFTransfDashboardViewController (Private)","plusFunction":10},{"class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","plusFunction":3}],"conditionFunctionClassMoreThanLimit":[{"functionName":"- (void)didTapToAccessNewControllerWithView:(UIView *)view","initialLine":194,"class":"@implementation IPFTransfDashboardViewController","content":"{\n\n  [super viewWillAppear:animated];\n  [self.navigationController setNavigationBarHidden:YES animated:animated];\n  IPFTabBarController *tabBarController =\n      (IPFTabBarController *)self.tabBarController;\n  [tabBarController showTabBarWithAnimation:YES];\n  if (UIAccessibilityIsVoiceOverRunning()) {\n    self.isAccessibilityOn = YES;\n  } else {\n    self.isAccessibilityOn = NO;\n  }\n  if (self.isAccessibilityOn) {\n    self.expanded = YES;\n  }\n  if ([IPFFeatureToggle isPaymentNextPaymentsEnabled]) {\n    if (self.expanded) {\n      self.nextPaymentsTableView.alpha = 0;\n      self.nextPaymentsParentView.alpha = 0;\n      self.transferViewHeightConstraint.constant +=\n          self.loadingView.frame.size.height +\n          self.tableViewBottomConstraint.constant;\n      [self.activityIndicator startAnimating];\n      [self loadNextPaymentsWithCompletion:^{\n        [UIView animateWithDuration:kAnimationDuration\n            animations:^{\n              self.nextPaymentsParentView.alpha = 1;\n              self.nextPaymentsTableView.alpha = 1;\n            }\n            completion:^(BOOL finished) {\n              [self.activityIndicator stopAnimating];\n              [self calculateTableRows];\n              [self setNewHeightForTransferDashboard];\n              [self adjustLayoutWithAnimation];\n            }];\n      }];\n    } else {\n      [self.activityIndicator stopAnimating];\n    }\n  }\n  [self setNewHeightForTransferDashboard];\n  [[NSNotificationCenter defaultCenter]\n      addObserver:self\n         selector:@selector(becameActive)\n             name:kApplicationDidBecomeActiveNotification\n           object:nil];\n  [IPFPushHelper refreshNotificationCount];\n\n  [IPFAnalyticsManager\n      ADBTrackerTrackViewName:kAdobeAnalyticsNavigationTransactions\n          withContextPageName:kAdobeAnalyticsNavigationTransactions\n        withContextAppSection:kSectionHomeLoggedAdobeAnalytics\n       withContextAnalyticsId:[IPFEnvironmentUtil adobeAnalyticsID]\n        withContextIsLoggedIn:kLoginStateLoggedAdobeAnalytics\n                 completeWith:nil];\n}","lengthCondition":6,"plusCondition":5},{"functionName":"- (void)viewWillAppear:(BOOL)animated {","initialLine":282,"class":"@implementation IPFTransfDashboardViewController","content":"{\n  CGFloat leftColumnHeight = kLeftColumnHeight;\n  CGFloat rightColumnHeight = kRightColumnHeight;\n\n  [self setupCellphoneRechargeVisibility:&rightColumnHeight];\n  [self setupDDAEnabledVisibility:&rightColumnHeight];\n\n  [self setupAuthorizedDebitVisibility:&leftColumnHeight];\n  [self setupNextPaymentVisibility];\n\n  if (leftColumnHeight >= rightColumnHeight) {\n    self.contentViewHeightConstraint.constant = leftColumnHeight;\n  } else {\n    self.contentViewHeightConstraint.constant = rightColumnHeight;\n  }\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)setStyleBorderInView:(UIView *)view {","initialLine":454,"class":"@implementation IPFTransfDashboardViewController","content":"{\n  NSDate *startDate = [NSDate date];\n  NSDate *endDate = [startDate addDays:kNextPaymentsPeriod];\n  __block typeof(self) weakSelf = self;\n  [weakSelf.paymentTimelineManager\n      fetchNextPaymentsUnpaidWithUser:[[IPFSessionManager sharedManager]\n                                          sessionUser]\n                            startDate:startDate\n                              endDate:endDate\n                           completion:^(\n                               NSArray<IPFNextPayment *> *arrayPayments,\n                               NSError *error) {\n                             if (arrayPayments && arrayPayments.count > 0) {\n                               IPFNextPayment *firstItem =\n                                   arrayPayments.firstObject;\n                               weakSelf.nextPaymentArray = [weakSelf\n                                   filterNextPaymentArray:arrayPayments\n                                                   byDate:firstItem.date];\n                             }\n                             [weakSelf calculateTableRows];\n                             [weakSelf loadNextPaymentsView];\n                             if (completion) {\n                               completion();\n                             }\n                           }];\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)setAccessibilityOnCards {","initialLine":481,"class":"@implementation IPFTransfDashboardViewController","content":"{\n\n  if (self.expanded == YES) {\n    if (self.nextPaymentArray.count == 0) {\n      self.tableRows = 2;\n    } else {\n      self.tableRows = 1 + self.nextPaymentArray.count;\n    }\n  } else {\n    self.tableRows = 1;\n  }\n}","lengthCondition":4,"plusCondition":3},{"functionName":"- (void)openCalendarTimeline {","initialLine":494,"class":"@implementation IPFTransfDashboardViewController","content":"{\n\n  if (self.nextPaymentArray.count > 0) {\n    self.transferDashboardView.nextPaymentHeaderView.emptyStatus = NO;\n    IPFNextPayment *nextPayment = self.nextPaymentArray.firstObject;\n    self.transferDashboardView.nextPaymentHeaderView.detailLabel.text =\n        nextPayment.formattedCustomDate;\n  } else {\n    self.transferDashboardView.nextPaymentHeaderView.emptyStatus = YES;\n  }\n  self.transferDashboardView.nextPaymentHeaderView.numberOfNextpayments =\n      self.nextPaymentArray.count;\n  [self.transferDashboardView.nextPaymentHeaderView setupAccessibility];\n  [self setNewHeightForTransferDashboard];\n  [self adjustLayoutWithAnimation];\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)loadNextPaymentsWithCompletion:(PaymentCompletionCallback)completion {","initialLine":511,"class":"@implementation IPFTransfDashboardViewController","content":"{\n\n  CGFloat headerHeight;\n  CGFloat tableRowsHeight;\n  CGFloat totalHeight;\n  CGRect dashboardFrame = self.transferDashboardView.frame;\n  if (self.view.layer.frame.size.width - kCardMarginsSize >\n      kTableViewNormalWidth) {\n    headerHeight = kHeaderLargeHeight;\n  } else {\n    headerHeight = kHeaderNormalHeight;\n  }\n  if ([IPFFeatureToggle isPaymentNextPaymentsEnabled]) {\n    self.nextPaymentsParentView.hidden = NO;\n    if (self.nextPaymentArray.count == 0) {\n      tableRowsHeight = kErrorCellHeight;\n    } else {\n      tableRowsHeight = self.nextPaymentArray.count * kHeightForRow;\n    }\n    self.nextPaymentsParentViewHeightConstraint.constant = headerHeight;\n    if ([IPFFeatureToggle isTransactionCalendarEnabled]) {\n      self.nextPaymentsParentViewHeightConstraint.constant +=\n          kNextPaymentsFooterViewHeight;\n    }\n    if (self.expanded) {\n      self.nextPaymentsParentViewHeightConstraint.constant += tableRowsHeight;\n    }\n    totalHeight = kTransferViewHeightWithoutTable +\n                  self.nextPaymentsParentViewHeightConstraint.constant;\n  } else {\n    self.nextPaymentsParentView.hidden = YES;\n    totalHeight = kTransferViewHeightWithoutTable;\n  }\n  self.transferViewHeightConstraint.constant = totalHeight + 16;\n  [self.transferDashboardView setFrame:dashboardFrame];\n}","lengthCondition":8,"plusCondition":7},{"functionName":"- (void)alertView:(UIAlertView *)alertView","initialLine":583,"class":"@implementation IPFTransfDashboardViewController","content":"{\n\n  id cell;\n  if (self.expanded && indexPath.row > 0) {\n    if (self.nextPaymentArray.count == 0) {\n      cell =\n          [tableView dequeueReusableCellWithIdentifier:kNextPaymentErrorCellId];\n    } else {\n      IPFNextPayment *nextPayment = self.nextPaymentArray[indexPath.row - 1];\n      cell = [tableView dequeueReusableCellWithIdentifier:[IPFNextPaymentCell\n                                                              cellIdentifier]];\n      NSString *preffixAccessibility = [NSString\n          stringWithFormat:\n              NSLocalizedString(\n                  kLocalizedAccessibilityDashboardPaymentNextpaymentCellPreffixplaceholder,\n                  nil),\n              indexPath.row + 1, self.nextPaymentArray.count];\n      [cell setupCellWithPayment:nextPayment\n             accessibilityString:preffixAccessibility];\n    }\n  } else {\n    cell =\n        [tableView dequeueReusableCellWithIdentifier:kNextPaymentHeaderCellId];\n    self.nextPaymentHeader = (IPFNextPaymentHeaderTableViewCell *)cell;\n    self.nextPaymentHeader.delegateListener = self;\n    self.nextPaymentHeader.flipButton.hidden = self.isAccessibilityOn;\n  }\n\n  return cell;\n}","lengthCondition":4,"plusCondition":3},{"functionName":"- (NSInteger)tableView:(UITableView *)tableView","initialLine":628,"class":"@implementation IPFTransfDashboardViewController","content":"{\n\n  CGFloat rowHeight;\n  if (indexPath.row == 0) {\n    rowHeight = tableView.layer.frame.size.width - kCardMarginsSize >\n                        kTableViewNormalWidth\n                    ? kHeaderLargeHeight\n                    : kHeaderNormalHeight;\n  } else {\n    if (self.nextPaymentArray.count == 0) {\n      rowHeight = kErrorCellHeight;\n    } else {\n      rowHeight = kHeightForRow;\n    }\n  }\n  return rowHeight;\n}","lengthCondition":4,"plusCondition":3},{"functionName":"- (CGFloat)tableView:(UITableView *)tableView","initialLine":670,"class":"@implementation IPFTransfDashboardViewController","content":"{\n\n  if (self.expanded == YES) {\n    [[IPFSessionManager sharedManager]\n        updateUserPreference:NextPaymentsVisibilityPreference\n                          to:NO];\n    self.expanded = NO;\n    self.tableRows = 1;\n    [self calculateTableRows];\n    [flipButton setExpanded:self.expanded];\n    [self setNewHeightForTransferDashboard];\n    [self adjustLayoutWithAnimation];\n\n  } else {\n    [[IPFSessionManager sharedManager]\n        updateUserPreference:NextPaymentsVisibilityPreference\n                          to:YES];\n    self.expanded = YES;\n    [UIView animateWithDuration:kAnimationDuration\n        animations:^{\n          flipButton.alpha = 0;\n          activityIndicator.alpha = 1;\n        }\n        completion:^(BOOL finished) {\n          [activityIndicator startAnimating];\n          [self loadNextPaymentsWithCompletion:^{\n            [UIView animateWithDuration:kAnimationDuration\n                animations:^{\n                  flipButton.alpha = 1;\n                  [flipButton setExpanded:self.expanded];\n                  activityIndicator.alpha = 0;\n                }\n                completion:^(BOOL finished) {\n                  [activityIndicator stopAnimating];\n                  [self calculateTableRows];\n                  [self setNewHeightForTransferDashboard];\n                  [self adjustLayoutWithAnimation];\n                }];\n          }];\n        }];\n  }\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)singleTapGestureCaptured:(UITapGestureRecognizer *)gesture {","initialLine":755,"class":"@implementation IPFTransfDashboardViewController (Actions)","content":"{\n\n  if ([IPFSessionManager sharedManager].currentAccountIsUnderContingency) {\n    __weak __block typeof(IPFContingencyErrorViewController *)\n        paymentWarningVC = (IPFContingencyErrorViewController *)\n            [IPFStoryboardUtil contingencyPaymentWarningViewController];\n    __weak __block typeof(self) weakSelf = self;\n    paymentWarningVC.proceedToNextScreenBlock = ^void(void) {\n      [paymentWarningVC\n          dismissViewControllerAnimated:YES\n                             completion:^{\n                               [weakSelf handlePaymentClickAction];\n                             }];\n    };\n    [self presentViewController:paymentWarningVC animated:YES completion:nil];\n  } else {\n    [self handlePaymentClickAction];\n  }\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)openRechargeView {","initialLine":775,"class":"@implementation IPFTransfDashboardViewController (Actions)","content":"{\n\n  if (UIAccessibilityIsVoiceOverRunning()) {\n    [self openInputCodebarWithValue:@\"\"];\n  } else {\n    __weak __block typeof(self) weakSelf = self;\n    [IPFEnvironmentUtil requestCameraAccessWithCompletion:^(\n                            NSString *messageFailed, BOOL granted) {\n      if (granted) {\n\n        [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard\n                                            action:kGAActionAbrirCamera\n                                             label:nil\n                                             value:nil];\n        [weakSelf\n            presentViewController:\n                [IPFStoryboardUtil\n                    barcodeReaderNavigationControllerWithDelegate:weakSelf]\n                         animated:YES\n                       completion:nil];\n      } else {\n        if ([UIAlertController class]) {\n          UIAlertController *alert = [UIAlertController\n              alertControllerWithTitle:nil\n                               message:messageFailed\n                        preferredStyle:UIAlertControllerStyleAlert];\n\n          UIAlertAction *inputCodebarAction = [UIAlertAction\n              actionWithTitle:NSLocalizedString(\n                                  kLocalizedDefaultLabelDigitecodigo, nil)\n                        style:UIAlertActionStyleDefault\n                      handler:^(UIAlertAction *_Nonnull action) {\n\n                        [weakSelf openInputCodebarWithValue:@\"\"];\n                      }];\n          UIAlertAction *okAction = [UIAlertAction\n              actionWithTitle:NSLocalizedString(kLocalizedButtonOk, nil)\n                        style:UIAlertActionStyleDefault\n                      handler:nil];\n\n          [alert addAction:inputCodebarAction];\n          [alert addAction:okAction];\n\n          [weakSelf presentViewController:alert animated:YES completion:nil];\n        } else {\n          UIAlertView *alert = [[UIAlertView alloc]\n                  initWithTitle:messageFailed\n                        message:nil\n                       delegate:weakSelf\n              cancelButtonTitle:NSLocalizedString(kLocalizedButtonOk, nil)\n              otherButtonTitles:NSLocalizedString(\n                                    kLocalizedDefaultLabelDigitecodigo, nil),\n                                nil];\n          [alert show];\n          weakSelf.requestCameraAlertView = alert;\n        }\n      }\n    }];\n  }\n}","lengthCondition":6,"plusCondition":5},{"functionName":"- (NSArray *)filterNextPaymentArray:(NSArray<IPFNextPayment *> *)array","initialLine":986,"class":"@implementation IPFTransfDashboardViewController (Private)","content":"{\n\n  IPFMenuItemNew *item = [[IPFMenuItemNew alloc] init];\n  if (type == DDA) {\n    item.chaveMobile = kDDAOpKey;\n    item.nome = NSLocalizedString(kLocalizedPaymentTitleDda, nil);\n    [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard\n                                        action:kGALabelDda\n                                         label:nil\n                                         value:nil];\n  } else if (type == DAI) {\n    item.chaveMobile = kDAIOpKey;\n    item.nome = NSLocalizedString(kLocalizedPaymentTitleDai, nil);\n    [IPFEnvironmentUtil trackEventWithCategory:kGACategoryDashboard\n                                        action:kGALabelDai\n                                         label:nil\n                                         value:nil];\n  }\n  if (item.chaveMobile && item.chaveMobile.length > 0) {\n    [[NSNotificationCenter defaultCenter]\n        postNotificationName:kShowMenuItemNotification\n                      object:nil\n                    userInfo:@{kMenuItemNotificationKey : item}];\n  }\n}","lengthCondition":3,"plusCondition":2},{"functionName":"- (void)didTapToAccessNewControllerWithView:(UIView *)view","initialLine":1032,"class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","content":"{\n  if ([IPFFeatureToggle isPaymentCellphoneRechargeEnabled]) {\n    [self.topUpPhoneView setHidden:NO];\n    self.cellphoneRechargeTopSpaceConstraint.constant = kDefaultTopSpace;\n    self.cellphoneRechargeHeightConstraint.constant = kCellphoneDdaHeightSpace;\n    *rightColumnHeight += kRightColumnHeightCellphoneDda;\n  } else {\n    [self.topUpPhoneView setHidden:YES];\n    self.cellphoneRechargeTopSpaceConstraint.constant = kZeroTopHeight;\n    self.cellphoneRechargeHeightConstraint.constant = kZeroTopHeight;\n  }\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)proceedToPlayCardBill {","initialLine":1045,"class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","content":"{\n  if ([IPFFeatureToggle isPaymentDDAEnabled]) {\n    [self.DDAView setHidden:NO];\n    self.ddaTopSpaceConstraint.constant = kDefaultTopSpace;\n    self.ddaHeightConstraint.constant = kCellphoneDdaHeightSpace;\n    *rightColumnHeight += kRightColumnHeightCellphoneDda;\n\n  } else {\n    [self.DDAView setHidden:YES];\n    self.ddaTopSpaceConstraint.constant = kZeroTopHeight;\n    self.ddaHeightConstraint.constant = kZeroTopHeight;\n  }\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (NSString *)pasteBoardText {","initialLine":1059,"class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","content":"{\n  if ([IPFFeatureToggle isPaymentAuthorizeDebitEnabled]) {\n    [self.authorizeDebitView setHidden:NO];\n    self.authorizeDebitTopSpaceConstraint.constant = kDefaultTopSpace;\n    self.authorizeDebitHeightConstraint.constant =\n        kAuthorizeDebitHeightConstraint;\n    *leftColumnHeight += kLeftColumnHeightAuthorizedDebit;\n  } else {\n    [self.authorizeDebitView setHidden:YES];\n    self.authorizeDebitTopSpaceConstraint.constant = kZeroTopHeight;\n    self.authorizeDebitHeightConstraint.constant = kZeroTopHeight;\n  }\n}","lengthCondition":2,"plusCondition":1},{"functionName":"- (void)setupCellphoneRechargeVisibility:(CGFloat *)rightColumnHeight {","initialLine":1073,"class":"@implementation IPFTransfDashboardViewController (FeatureToggle)","content":"{\n  if ([IPFFeatureToggle isPaymentNextPaymentsEnabled]) {\n    [self.nextPaymentsTableView setHidden:NO];\n    [self.loadingView setHidden:NO];\n  } else {\n    [self.nextPaymentsTableView setHidden:YES];\n    [self.loadingView setHidden:YES];\n  }\n}","lengthCondition":2,"plusCondition":1}],"template":{"castle":false,"hero":{"position":40,"type":"hit","size":0},"bug":{"position":0,"type":"default","size":0}}}